swagger: '2.0'
info:
  version: '2'
  title: System API V2
host: as1506.awmdm.com
basePath: /API/system
schemes:
  - https
  - http
paths:
  /admins:
    post:
      tags:
        - AdminsV2
      summary: New - Creates a new admin user.
      description: Performs necessary checks and Create a new Admin.
      operationId: AdminsV2_Create
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: admin
          in: body
          description: The admin user resource to create (Required).
          required: true
          schema:
            $ref: '#/definitions/AdminV2Model'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EntityId'
        '400':
          description: >-
            1. { 400: UserName already exists. }2. { 400: Email Address is not
            valid. }3. { 400: Location Group {OGId} not found or user does not
            have access to it }4. { 400: LocationGroupId {OGId} is not valid }5.
            { 400: UserName cannot be null or empty. }6. { 400: User Not Found
            in Directory }7. { 400: Admin User should be associated with atleast
            one role, please add role to the user. }8. { 400: The TimeZone value
            : {TimeZoneId} is invalid. }9. { 400: Invalid Locale name. }10. {
            400: Duplicate role mapping is found between Location Group id
            {OGId} and Role id {RoleId} }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/admins/{uuid}':
    get:
      tags:
        - AdminsV2
      summary: New - Retrieves information about the specified admin user.
      description: >-
        Performs necessary checks and get all the information of the Admin based
        on admin udid.
      operationId: AdminsV2_Get
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: Admin user UUID(Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminUser'
        '400':
          description: >-
            1. { 400: User not found or does not have access to retrieve the
            details }2. { 400: Requested 'admin' was not found or user is not
            authorized to access it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    put:
      tags:
        - AdminsV2
      summary: New - Updates the specified admin user.
      description: Performs necessary checks and Update the Admin properties based on Id.
      operationId: AdminsV2_Update
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: The admin user UUID(Required).
          required: true
          type: string
          format: uuid
        - name: admin
          in: body
          description: The updated admin user details.
          required: false
          schema:
            $ref: '#/definitions/AdminV2Model'
      responses:
        '200':
          description: OK
        '400':
          description: >-
            1. { 400: User not found or does not have access to retrieve the
            details }1. { 400: UserName already exists. }2. { 400: Email Address
            is not valid. }3. { 400: Location Group {OGId} not found or user
            does not have access to it }4. { 400: LocationGroupId {OGId} is not
            valid }5. { 400: Requested 'admin' was not found or user is not
            authorized to access it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    delete:
      tags:
        - AdminsV2
      summary: New - Deletes the specified admin user.
      description: V2.
      operationId: AdminsV2_Delete
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: Admin user UUID to be deleted(Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: >-
            1. { 400: Requested 'admin' was not found or user is not authorized
            to access it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /admins/search:
    get:
      tags:
        - AdminsV2
      summary: New - Searches for Admin users using the query information provided.
      description: >-
        Performs necessary checks and search for the admin users based on the
        request query.
      operationId: AdminsV2_SearchAsync
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: firstname
          in: query
          description: The First name to search for.
          required: false
          type: string
          
        - name: lastname
          in: query
          description: The Last name to search for.
          required: false
          type: string
          
        - name: email
          in: query
          description: The Email Address to search for.
          required: false
          type: string
          
        - name: organizationgroupid
          in: query
          description: The Organization Group Id to search for.
          required: false
          type: integer
          
        - name: role
          in: query
          description: The Role name to search for.
          required: false
          type: string
          
        - name: username
          in: query
          description: The User name to search for.
          required: false
          type: string
          
        - name: orderby
          in: query
          description: Order the results by this attribute.
          required: false
          type: string
          
        - name: page
          in: query
          description: The specific page number to get.
          required: false
          type: integer
          
        - name: pagesize
          in: query
          description: Maximum records per page.
          required: false
          type: integer
          
        - name: sortorder
          in: query
          description: >-
            Sorting order. Allowed values are ASC or DESC. Defaults to ASC if
            this attribute is not specified.
          required: false
          type: string
          
        - name: status
          in: query
          description: >-
            The admin status. Allowed values are Active or Inactive. Defaults to
            all, if this attribute is not specified.
          required: false
          type: string
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminSearchResultV2'
        '204':
          description: NoContent
        '400':
          description: >-
            1. { 400: Resource's organization group :{OGId} not found or user
            does not have access to this organization group. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/admins/{uuid}/password':
    put:
      tags:
        - AdminsV2
      summary: New - Changes the specified admin user's password.
      description: Performs necessary checks and update the password for an existing admin.
      operationId: AdminsV2_ChangePassword
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: The admin user udid (Required).
          required: true
          type: string
          format: uuid
        - name: adminuser
          in: body
          description: The admin user details.
          required: false
          schema:
            $ref: '#/definitions/AdminUser '
      responses:
        '200':
          description: OK
        '400':
          description: >-
            1. { 400: User not found or does not have access to retrieve the
            details }2. { 400: Password cannot be null, empty, or whitespace }3.
            { 400: Password does not meet complexity requirements }4. { 400:
            Requested 'admin' was not found or user is not authorized to access
            it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '401':
          description: '1. { 401: LDAP / AD users passwords cannot be changed }'
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/groups/{organizationGroupUuid}/admins/{adminUserUuid}/roles/{roleUuid}':
    put:
      tags:
        - AdminsV2
      summary: New - Adds a role to the specified admin user.
      description: Performs necessary checks and add an role for an existing admin.
      operationId: AdminsV2_AddRoleToUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: organizationGroupUuid
          in: path
          description: Location group UUID string (Required).
          required: true
          type: string
          format: uuid
        - name: adminUserUuid
          in: path
          description: Admin user UUID (Required).
          required: true
          type: string
          format: uuid
        - name: roleUuid
          in: path
          description: Role UUID to be added (Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: >-
            1. { 400: User not found or does not have access to retrieve the
            details }2. { 400: Role {RoleId} not found or user does not have
            access to it }3. { 400: Location Group {OGId} not found or user does
            not have access to it }4. { 400: Admin user already has this role.
            5. { 400: Requested 'admin' was not found or user is not authorized
            to access it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    delete:
      tags:
        - AdminsV2
      summary: New - Removes a role from the specified admin user.
      description: Performs necessary checks and remove an role from an existing admin.
      operationId: AdminsV2_RemoveRoleFromUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: organizationGroupUuid
          in: path
          description: Location group UUID string (Required).
          required: true
          type: string
          format: uuid
        - name: adminUserUuid
          in: path
          description: Admin user UUID (Required).
          required: true
          type: string
          format: uuid
        - name: roleUuid
          in: path
          description: Role UUID to be deleted (Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: >-
            1. { 400: User not found or does not have access to retrieve the
            details }2. { 400: Role {RoleId} not found or user does not have
            access to it }3. { 400: Location Group {OGId} not found or user does
            not have access to it }4. { 400: Role cannot be removed 5. {400:
            Role cannot be removed, atleast one role should be associated with
            the admin user {AdminId} }6. { 400: Requested 'admin' was not found
            or user is not authorized to access it. }7. { 400: Requested 'admin
            role' was not found or user is not authorized to access it. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/advancedldapsyncjobs/{uuid}':
    get:
      tags:
        - AdvancedLdapSyncJobV2
      summary: >-
        New - Gets LDAP sync job details. Allows admins to preview the changes
        to enrollment user attributes.
      description: >-
        Preview details of the advanced LDAP sync job including the job status,
        enrollment user attributes etc.
      operationId: AdvancedLdapSyncJobV2_PreviewAdvancedLdapSyncJobAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: The unique id of the created advanced ldap sync job.(Required).
          required: true
          type: string
          format: uuid
        - name: page_number
          in: query
          description: Page number.
          required: false
          type: integer
          
        - name: page_size
          in: query
          description: Page size. Default/Maximum is 500.
          required: false
          type: integer
          
        - name: search_text
          in: query
          description: Filters records based on the search text.
          required: false
          type: string
          
        - name: sort_column
          in: query
          description: Column based on which we can provide the sorting. Default JOB_ID.
          required: false
          type: string
          default: 'JOB_ID'
        - name: sort_order
          in: query
          description: The order based which on we can sort. Default value is ASC.
          required: false
          type: string
          default: 'ASC'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PreviewAdvancedLdapSyncJobResponseV2Model'
        '400':
          description: 'Bad Request 1.{ 6: Sort Column is invalid. } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found 1.{ 6301: Advanced LDAP Sync Job does not exist.} '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '422':
          description: >-
            UnProcessable Entity 1.{ 6304: The job is not in Pending Approval
            status and no preview data is available.} 2.{ 6312: The job has
            timed out as status has not changed for more than 24 hours.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/groups/{oguuid}/enrollment_users':
    get:
      tags:
        - AdvancedLdapSyncJobV2
      summary: New - Gets Enrollment user details for a particular Organization group.
      description: >-
        Search the details of all the enrollment users for the provided user
        name for a particular OG.
      operationId: AdvancedLdapSyncJobV2_EnrollmentUserDetailsAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: oguuid
          in: path
          description: The unique id of the organization group.(Required).
          required: true
          type: string
          format: uuid
        - name: user_name
          in: query
          description: User name.(Required)
          required: true
          type: string
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EnrollmentUserDetailsResponseModel'
        '400':
          description: 'Bad Request 1.{ 6320: Enrollment Users not found} '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: >-
            NotFound 1.{ 6008: No organization group found for the given
            Organization Group UUID : {0} } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/groups/{uuid}/apns':
    get:
      tags:
        - ApnsV2
      summary: New - Gets the APNs configuration for an Organization Group
      description: >-
        It fetches the configuration for APNs certificate Blob(.pem) uploaded to
        Workspace ONE UEM
      operationId: ApnsV2_GetApnsConfiguration
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: Unique identifier for the organization group(Required)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApnsCertificateV2Model'
        '400':
          description: >-
            1. {6019: Organization Group with id : {id} not found or Admin user
            does not have access to it.} 2. {6013: No APNs certificates were
            found on the group} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: >-
            1. {6008: No organization group found for the given organization
            group UUID.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /enrollment/restriction-policies:
    get:
      tags:
        - EnrollmentRestrictionPolicyV2
      summary: New - Gets Enrollment Restriction Policies accessible to admin
      description: >-
        Fetch Enrollment Restriction Policies accessible to admin. We only
        return the following properties- name, uuid, organization group uuid
      operationId: EnrollmentRestrictionPolicyV2_GetEnrollmentRestrictionPolicies
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EnrollmentRestrictionsPoliciesResponseModel'
        '404':
          description: >-
            Not Found. {6185: No enrollment restriction policy found for the
            organization group.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/enrollment/restriction-policies/{uuid}':
    get:
      tags:
        - EnrollmentRestrictionPolicyV2
      summary: New - Gets Enrollment Restriction Policy details based on uuid.
      description: >-
        Fetch details for an Enrollment Restriction policy which includes name,
        uuid, ogname and User group assignments
      operationId: >-
        EnrollmentRestrictionPolicyV2_GetEnrollmentRestrictionPolicyDetailsByUuid
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an enrollment restriction policy
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EnrollmentRestrictionsPolicyResponseModel'
        '404':
          description: >-
            Not Found. {6185: No enrollment restriction policy found for the
            organization group.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/enrollment/restriction-policies/{enrollmentRestrictionPolicyUuid}/organization-group/{organizationGroupUuid}':
    patch:
      tags:
        - EnrollmentRestrictionPolicyV2
      summary: New - Assigns a list of usergroups to Enrollment Restriction policy
      description: Assigns a list of usergroups to Enrollment Restriction policy
      operationId: EnrollmentRestrictionPolicyV2_Update
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: enrollmentRestrictionPolicyUuid
          in: path
          description: Identifier of an enrollment restriction policy(Required)
          required: true
          type: string
          format: uuid
        - name: organizationGroupUuid
          in: path
          description: Identifier of an enrollment organization group(Required)
          required: true
          type: string
          format: uuid
        - name: usergroups
          in: body
          description: List of User Groups(Required)
          required: true
          schema:
            $ref: '#/definitions/UserGroupsListModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AssignUserGroupsResponse'
        '400':
          description: >-
            Bad Request 1.{6: Enrollment organization group: { } not found or
            user does not have access to the organization group. } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{1011: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found 1. {12: Enrollment restriction policy not found : { } } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /eventnotifications:
    post:
      tags:
        - EventNotificationsV2
      summary: New - Creates a new Event Notification rule with events to subscribe to.
      description: v1.
      operationId: EventNotificationsV2_CreateEventNotificationRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: model
          in: body
          description: The Event Notification Model.
          required: false
          schema:
            $ref: '#/definitions/EventNotificationModel'
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /eventnotifications/search:
    get:
      tags:
        - EventNotificationsV2
      summary: >-
        New - Searches Event Notifications based on the query information
        provided.
      operationId: EventNotificationsV2_Search
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: targetname
          in: query
          description: The Target Name.
          required: false
          type: string
          
        - name: organizationgroupuuid
          in: query
          description: The OrganizationGroup Identifier.
          required: false
          type: string
          
        - name: status
          in: query
          description: 'The Event Notification status [Active, Inactive].'
          required: false
          type: string
          
        - name: orderby
          in: query
          description: >-
            Sorts the response based on this attribute [TargetName, TargetUrl,
            FormatType, UserName, Active].
          required: false
          type: string
          
        - name: sortorder
          in: query
          description: Sorting order. Values ASC or DESC. Defaults to ASC..
          required: false
          type: string
          
        - name: page
          in: query
          description: Page number.
          required: false
          type: integer
          
        - name: pagesize
          in: query
          description: Number of Records per page.
          required: false
          type: integer
          
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/eventnotifications/{uuid}':
    get:
      tags:
        - EventNotificationsV2
      summary: >-
        New - Retrieves details of an Event Notification Rule identified by
        EventNotification Id.
      operationId: EventNotificationsV2_GetEventNotificationById
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: The Event Notification GUID.
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    put:
      tags:
        - EventNotificationsV2
      summary: >-
        New - Updates an Event Notification Rule identified by the Event
        Notification Id.
      operationId: EventNotificationsV2_UpdateEventNotificationRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: The Event Notification GUID.
          required: true
          type: string
          format: uuid
        - name: model
          in: body
          description: The Event Notification Model.
          required: false
          schema:
            $ref: '#/definitions/EventNotificationModel'
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    delete:
      tags:
        - EventNotificationsV2
      summary: >-
        New - Deletes an Event Notification Rule identified by the Event
        Notification Id.
      description: v1.
      operationId: EventNotificationsV2_DeleteEventNotificationRule
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: uuid
          in: path
          description: The Event Notification GUID.
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /eventnotifications/get:
    get:
      tags:
        - EventNotificationsV2
      summary: >-
        Get Event Notifications and Subscriptions based on optional
        OrganizationGroup Id or page size.
      operationId: EventNotificationsV2_GetEventNotificationsAndSubscriptions
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: organizationgroupuuid
          in: query
          description: The OrganizationGroup Identifier.
          required: false
          type: string
          
        - name: page
          in: query
          description: Page number.
          required: false
          type: integer
          
        - name: pagesize
          in: query
          description: Number of Records per page.
          required: false
          type: integer
          
      responses:
        '200':
          description: OK
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/GroupSyncActions/{uuid}':
    get:
      tags:
        - GroupSyncActionsV2
      summary: New - Get Group Acknowledgement
      description: >-
        Gets the approval status for a group along with the access token and
        link to merge that group. This will also include the details of members
        added and removed from the group.
      operationId: GroupSyncActionsV2_GroupAcknowledgement
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: UserGroup Uuid.(Required)
          required: true
          type: string
          format: uuid
        - name: membershipStatus
          in: query
          description: Filter for Added and Removed Users - ('Add'/'Remove')
          required: false
          type: string
          
        - name: page
          in: query
          description: Page number to be displayed
          required: false
          type: string
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupAcknowledgementV2Model'
        '400':
          description: 'Bad Request  '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1. {1011: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found 1. {6186: Group not found for given UUID '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /GroupSyncActions:
    post:
      tags:
        - GroupSyncActionsV2
      summary: New - Merges the group changes
      description: >-
        Merges the user or admin group which are in 'MergePendingApproval' or
        'MergeFailed' state.
      operationId: GroupSyncActionsV2_MergePendingGroups
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: mergePendingGroupsV2Model
          in: body
          description: (Required)
          required: true
          schema:
            $ref: '#/definitions/MergePendingGroupsV2Model'
      responses:
        '204':
          description: No Content
        '400':
          description: >-
            Bad Request 1. { 6189 : This is not a directory user group. Try
            again with a directory user group.} 2. { 6052 : Invalid user or
            admin group. Try again with a valid user group UUID.} 3. { 6190 :
            Invalid access token.Please try again with a valid access token.
            Access token will be generated when a user or admin group is synced
            and has changes that need to be merged.} 4. { 6191 : User or Admin
            group not in Pending Approval State}
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1. { 1011: User doesn't have sufficient permissions to
            perform this operation. } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: >-
            Not Found 1. { 6192: Admin does not have access to user or admin
            group. } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/groups/{id}':
    post:
      tags:
        - OrganizationGroups
      summary: Creates a new organization group.
      description: Create a new organization group.
      operationId: OrganizationGroups_PostAsync
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: id
          in: path
          description: The parent OrganizationGroup Identifier.
          required: true
          type: integer
          format: int32
        - name: locationGroup
          in: body
          description: The OrganizationGroup resource to be created.
          required: false
          schema:
            $ref: '#/definitions/OrganizationGroup '
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganizationGroupResponseModel'
        '400':
          description: >-
            1. {6 : Invalid Input - cannot create organization group with
            invalid input}
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            1. {5093 : Admin Is Not Authorized - Admin does not have permission
            to create Partner type Organization Group. }, 2. {5093 : Admin Is
            Not Authorized - Admin does not have permission to create Customer
            type Organization Group. }
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /groups/search:
    get:
      tags:
        - OrganizationGroups
      summary: Searches for organization groups using the query information provided.
      description: Search organization by the given parameter.
      operationId: OrganizationGroups_OrganizationGroupSearchAsync
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
        - application/xml;version=2
      parameters:
        - name: name
          in: query
          description: 'The OrganizationGroup name, such as "Global".'
          required: false
          type: string
          
        - name: type
          in: query
          description: 'The OrganizationGroup type. (eg. "Container","Customer","Partner").'
          required: false
          type: string
          
        - name: groupid
          in: query
          description: >-
            The organization group identifier[Activation code] to search
            for.[Exact match is performed for this attribute].
          required: false
          type: string
          
        - name: orderby
          in: query
          description: >-
            Orders the results based on this attribute-value[Valid values are:
            Id/Name/GroupId/LocationGroupType].
          required: false
          type: string
          
        - name: page
          in: query
          description: Specific page number to get. 0 based index.
          required: false
          type: integer
          
        - name: pagesize
          in: query
          description: Maximum records per page. Default 500.
          required: false
          type: integer
          
        - name: sortorder
          in: query
          description: >-
            Sorting order. Allowed values are ASC or DESC. Defaults to ASC if
            this attribute is not specified.
          required: false
          type: string
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganizationGroupPagedSearchResultModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
      x-relative-path: groups/search
      x-controller-fullname: AW.Core.Api.Controllers.OrganizationGroupsController
      x-operation-type: Single
      x-sla-ms-xxsmall: 5000
      x-sla-ms-xsmall: 5000
      x-sla-ms-small: 5000
      x-sla-ms-medium: 5000
      x-sla-ms-large: 5000
  '/groups/{uuid}':
    get:
      tags:
        - OrganizationGroupsV2
      summary: New - Retrieves information about the specified organization group.
      description: >-
        Retrieves organization group by UUID. If Organization goup is not found,
        it will throw 404 error.
      operationId: OrganizationGroupsV2_GetOrganizationGroup
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: >-
            Identifier for an organization group on which operation is to be
            executed.(Required)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganizationGroup'
        '404':
          description: >-
            NotFound 1. {6008: No organization group found for the given
            organization group UUID.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    put:
      tags:
        - OrganizationGroupsV2
      summary: New - Updates the metadata of the specified organization group.
      description: >-
        Update the metadata of organization group specified by UUID. It return
        bad request if organization group name too long or group id too long.
      operationId: OrganizationGroupsV2_UpdateOrganizationGroup
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: >-
            Identifier for an organization group on which operation is to be
            executed.(Required)
          required: true
          type: string
          format: uuid
        - name: organizationGroup
          in: body
          description: model containing OG details(Required)
          required: true
          schema:
            $ref: '#/definitions/OrganizationGroup'
      responses:
        '204':
          description: NoContent
        '400':
          description: >-
            BadRequest 1. {6: Invalid group name length} 2. {6:
            OrganizationGroup name has one or more restricted characters} 3. {6:
            Group ID exceed max size} 4. {6: Group ID has invalid characters} 5.
            {6: Global Organization group cannot be duplicated} 6. {6:
            Organization group name cannot be empty.} 7. {6: Organization group
            type cannot be empty.} 8. {6: Group ID cannot be empty.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: 'Forbidden 1.{5094: Admin is not authorized to edit customer code} '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '422':
          description: >-
            Unprocessable Entity 1. {6293 : Invalid Organization Group Timezone
            Code. } 2. {6309 : Invalid Organization Group Customer Industry
            type. } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    delete:
      tags:
        - OrganizationGroupsV2
      summary: New - Deletes the specified organization group.
      description: >-
        Delete organization group by given UUID. It return Forbidden if user
        want to delete current organization group. It returns bad request,if
        organization group cannot be deleted.
      operationId: OrganizationGroupsV2_DeleteOrganizationGroup
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: >-
            Identifier for an organization group on which operation is to be
            executed.(Required)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '403':
          description: >-
            Forbidden 1. {6019: Organization Group with id : {0} not found or
            Admin user does not have access to it.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: >-
            NotFound 1. {6008: No organization group found for the given
            organization group UUID.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '422':
          description: >-
            Unprocessable Entity 1. {200009: Organization group cannot be
            deleted as it has existing {0} conditional access configurations.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /scim/v2/Groups:
    get:
      tags:
        - ScimV2Groups
      summary: New - Get a group list
      description: Get the group list
      operationId: ScimV2Groups_GetUserGroups
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: filter
          in: query
          description: The filter string used to request a subset of resources.
          required: false
          type: string
        - name: attributes
          in: query
          description: >-
            A comma separated list of strings indicating the names of resource
            attributes to return in the response.
          required: false
          type: string
        - name: excludedAttributes
          in: query
          description: >-
            A comma separated list of strings indicating the names of resource
            attributes to be removed from the default set of attributes to
            return.
          required: false
          type: string
        - name: sortBy
          in: query
          description: >-
            A string indicating the attribute to be used to order the returned
            responses.
          required: false
          type: string
        - name: sortOrder
          in: query
          description: >-
            A string indicating the order in which the 'sortBy' parameter is
            applied.
          required: false
          type: string
        - name: startIndex
          in: query
          description: A 1-based integer indicating the index of the first query result.
          required: false
          type: string
        - name: count
          in: query
          description: An integer indicating the maximum number of query results per page.
          required: false
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/GroupListResponse'
        '401':
          description: Authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '429':
          description: Too many requests
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    post:
      tags:
        - ScimV2Groups
      summary: New - Create a group.
      description: "Endpoint to create a group. As of now, we only support importing user groups from  a directory service into Workspace One UEM. \r\nWhen importing a user group form directory service, one needs to pass externalId. \r\nIn case of a directory custom group, its required to pass displayName for the group."
      operationId: ScimV2Groups_CreateGroupAsync
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: createGroupRequest
          in: body
          description: The group to be created.(Required)
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/GroupResponse'
        '400':
          description: >-
            User Groups cannot be created outside of Customer Organization Group
            hierarchy.
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '401':
          description: Authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/scim/v2/Groups/{uuid}':
    get:
      tags:
        - ScimV2Groups
      summary: New - Get the group details by UUID
      description: Get the enrollment/admin group details by UUID
      operationId: ScimV2Groups_GetUserGroupByUuid
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an group(Required)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/GroupResponse'
        '401':
          description: Authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '429':
          description: Too many requests
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    patch:
      tags:
        - ScimV2Groups
      summary: New - Operations on groups.
      description: >-
        Operations on groups. Currently we support patch operation only on
        LastSyncOn. Sync will be performed only when the LastSyncOn is passed as
        mm/dd/yyyy
      operationId: ScimV2Groups_GroupActionsAsync
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of a group(Required)
          required: true
          type: string
          format: uuid
        - name: body
          in: body
          description: patch operations list(Required)
          required: true
          schema:
            $ref: '#/definitions/GroupPatchRequest'
      responses:
        '400':
          description: bad request
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '401':
          description: authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '429':
          description: too many requests
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /scim/v2/Groups/.search:
    post:
      tags:
        - ScimV2Groups
      summary: New - Search for groups.
      description: Search for groups.
      operationId: ScimV2Groups_SearchGroups
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: searchRequest
          in: body
          description: The search criteria to returned responses.(Required)
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/GroupResponse'
        '401':
          description: Authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '429':
          description: Too many requests
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /scim/v2/ServiceProviderConfig:
    get:
      tags:
        - ScimV2ServiceProviderConfig
      summary: New - Get the service provider configuration
      description: >-
        Clients can invoke this endpoint to get the service provider
        configuration
      operationId: ScimV2ServiceProviderConfig_GetServiceProviderConfig
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters: []
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ServiceProviderConfig'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/scim/v2/Users/{uuid}':
    get:
      tags:
        - ScimV2Users
      summary: New - Get a user by UUID
      description: Get the user by UUID.
      operationId: ScimV2Users_GetUserByUuid
      consumes:
        - application/scim+json
      produces:
        - application/scim+json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an user(Required)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          description: Authorization failure
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: Permissions denied
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '429':
          description: Too many requests
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/groups/{ogUuid}/settings/agent/storage':
    get:
      tags:
        - TenantStorageSettingsV2
      summary: New - Retrieves the tenant storage configuration details.
      description: >-
        Retrieves the configuration settings for the Workspace ONE UEM to tenant
        storage configuration.
      operationId: TenantStorageSettingsV2_GetTenantStorageConfigurationAsync
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json;version=2
      parameters:
        - name: ogUuid
          in: path
          description: Organization uuid.(Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TenantStorageSettingsV2ResponseModel'
        '403':
          description: >-
            Forbidden 1. {11: User does not have permission to perform this
            operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: >-
            Not Found 1.{6008: Organization group not found } 2.{6256 : No
            Tenant storage configuration data found for the given OG.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/user-groups/{userGroupUuid}/actions/changes':
    get:
      tags:
        - UserGroupsActions
      summary: New - View user group changes.
      description: View user group changes before merge.
      operationId: UserGroupsActions_ViewChangesAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: userGroupUuid
          in: path
          description: Identifier of an user group.(Required).
          required: true
          type: string
          format: uuid
        - name: order_by
          in: query
          description: Order the results by this attribute.
          required: false
          type: string
          
        - name: page
          in: query
          description: The specific page number to get.
          required: false
          type: integer
          
        - name: page_size
          in: query
          description: Maximum records per page.
          required: false
          type: integer
          
        - name: sort_order
          in: query
          description: >-
            Sorting order. Allowed values are ASC or DESC. Defaults to ASC if
            this attribute is not specified.
          required: false
          type: string
          default: 'ASC'
        - name: type
          in: query
          description: Changes type. Users to be added or to be removed.
          required: false
          type: string
          
        - name: search_text
          in: query
          description: Search text.
          required: false
          type: string
          
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ViewChangesModel'
        '400':
          description: 'Bad Request 1. {17: User Group Not Found } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{6078: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/user-groups/{userGroupUuid}/actions/merge':
    post:
      tags:
        - UserGroupsActions
      summary: New - Merge user group changes.
      description: Execute merge user group changes operation.
      operationId: UserGroupsActions_MergeChangesAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: userGroupUuid
          in: path
          description: Identifier of an user group.(Required).
          required: true
          type: string
          format: uuid
      responses:
        '201':
          description: Created
        '400':
          description: 'Bad Request 1. {17: User Group Not Found } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{6078: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/user-groups/{userGroupUuid}/actions/sync':
    post:
      tags:
        - UserGroupsActions
      summary: New - Sync user group.
      description: Execute sync user group operation.
      operationId: UserGroupsActions_SyncAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: userGroupUuid
          in: path
          description: Identifier of an user group(Required).
          required: true
          type: string
          format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: 'Bad Request 1. {17: User Group Not Found } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{6078: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/user-groups/{userGroupUuid}/actions/add-missing-users':
    post:
      tags:
        - UserGroupsActions
      summary: New - Add missing users.
      description: Execute add missing users operation.
      operationId: UserGroupsActions_AddMissingUsersAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: userGroupUuid
          in: path
          description: Identifier of an user group.(Required).
          required: true
          type: string
          format: uuid
      responses:
        '201':
          description: Created
        '400':
          description: 'Bad Request 1. {17: User Group Not Found } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{6078: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/user-groups/{userGroupUuid}/actions/changes/report':
    post:
      tags:
        - UserGroupsActions
      summary: New - Report for user group changes before merge.
      description: Generate a report for changes before merge.
      operationId: UserGroupsActions_GenerateViewChangesReportAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: userGroupUuid
          in: path
          description: Identifier of an user group.(Required).
          required: true
          type: string
          format: uuid
        - name: order_by
          in: query
          description: Order the results by this attribute.
          required: false
          type: string
          
        - name: sort_order
          in: query
          description: >-
            Sorting order. Allowed values are ASC or DESC. Defaults to ASC if
            this attribute is not specified.
          required: false
          type: string
          default: 'ASC'
        - name: type
          in: query
          description: Changes type. Users to be added or to be removed.
          required: false
          type: string
          
        - name: search_text
          in: query
          description: Search text.
          required: false
          type: string
          
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: '/{organization-group-uuid}/exported-reports/{report-uuid}'
              type: string
        '400':
          description: 'Bad Request 1. {17: User Group Not Found } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{6078: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  /users:
    post:
      tags:
        - UsersV2
      summary: New - Create an enrollment user
      description: >-
        Create an enrollment user with attributes including externalId,
        userName, password, firstName, lastName, displayName, userPrincipalName,
        emailAddress, phoneNumber, mobileNumber, messageType,
        messageTemplateUuid, enrollmentRoleUuid, status, securityType,
        deviceStagingEnabled, deviceStagingType, organizationGroupUuid,
        enrollmentOrganizationGroupUuid, aadMappingAttribute, department,
        employeeIdentifier, costCenter, customAttribute1, customAttribute2,
        customAttribute3, customAttribute4 and customAttribute5.
        &lt;br/&gt;&lt;br/&gt;UsersV2 API support syncing of users into the
        Workspace ONE Access from Workspace ONE UEM.
      operationId: UsersV2_CreateAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: user
          in: body
          description: Enrollment user attributes(Required).
          required: true
          schema:
            $ref: '#/definitions/CreateEnrollmentUserV2Model'
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: 'users/{uuid}'
              type: string
        '400':
          description: >-
            Bad Request 1. {6: Resource's organization group :{ } not found or
            user does not have access to this organization group. } 2. {5081: {
            } authentication is not enabled at organization group: { }. } 3.
            {5086: Directory service is not configured for organization group {
            }.} 4. {5087: Unable to create a directory enrollment user when LDAP
            type is none and SAML is disabled at organization group { }. } 5.
            {5088: The directory enrollment user { } is required with LDAP type
            is none and SAML is enabled at organization group { }. } 6. {400:
            User not found in Directory. } 7. {5066: Error occurred during
            password enforcement: { }. } 8. {5082: Enrollment user { } exists at
            organization group { }. } 9. {5083: Enrollment role { } is not
            valid. } 10. {5084: Default enrollment role is not found at
            organization group: { }. } 11. {5085: Enrollment message template: {
            } is not valid. } 12. {18: Users cannot be created outside of
            Customer Organization Group hierarchy.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{1011: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '422':
          description: >-
            1012 - Unprocessable Entity 1. {SecurityType: SecurityType is not
            valid. Available options are basic, directory and
            authenticationProxy.} 2. {Password: Password is required for the { }
            enrollment user.} 3. {Password: Password cannot be greater than 128
            characters.} 4. {FirstName: FirstName is required for the { }
            enrollment user.} 5. {LastName: LastName is required for the { }
            enrollment user.} 6. {EmailAddress: EmailAddress is required for the
            { } enrollment user.} 7. {EmailAddress: EmailAddress is not valid.}
            8. {MessageType: MessageType is not valid. Available options are
            None, Email and SMS.} 9. {MobileNumber: MobileNumber is required for
            SMS notification.} 10. {MobileNumber: MobileNumber is not valid.}
            11. {PhoneNumber: PhoneNumber is not valid.} 12. {DeviceStagingType:
            DeviceStagingType is not valid. Available options are
            StagingDisabled, SingleUserStagingStandard,
            SingleUserStagingAdvanced, MultipleUserStaging,
            MultipleUserStagingSingleUserStandard and
            MultipleUserStagingSingleUserAdvanced.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
  '/users/{uuid}':
    get:
      tags:
        - UsersV2
      summary: New - Read an enrollment user by UUID
      description: >-
        Read an enrollment user attributes including uuid, externalId, domain,
        userName, firstName, lastName, displayName, fullName, userPrincipalName,
        emailAddress, phoneNumber, mobileNumber, emailUserName, messageType,
        messageTemplateUuid, enrollmentRoleUuid, status, securityType,
        deviceStagingType, enrolledDeviceCount, removableDriveCount,
        userGroupCount, organizationGroupUuid, enrollmentOrganizationGroupUuid,
        aadMappingAttribute, department, employeeIdentifier, costCenter,
        customAttribute1, customAttribute2, customAttribute3, customAttribute4
        and customAttribute5
      operationId: UsersV2_ReadAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an enrollment user(Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReadEnrollmentUserV2Model'
        '403':
          description: >-
            Forbidden 1. {1011: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found 1. {12: Enrollment User not found : { } } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    put:
      tags:
        - UsersV2
      summary: New - Update an enrollment user by UUID
      description: >-
        Update the enrollment user with attributes including password,
        firstName, lastName, displayName, emailAddress, phoneNumber,
        mobileNumber, messageType, messageTemplateUuid, deviceStagingEnabled,
        deviceStagingType,  enrollmentRoleUuid, enrollmentOrganizationGroupUuid,
        aadMappingAttribute, department, employeeIdentifier, costCenter,
        customAttribute1, customAttribute2, customAttribute3, customAttribute4
        and customAttribute5. &lt;br/&gt;&lt;br/&gt;UsersV2 API support syncing
        of users into the Workspace ONE Access from Workspace ONE UEM.
      operationId: UsersV2_UpdateAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an enrollment user(Required).
          required: true
          type: string
          format: uuid
        - name: user
          in: body
          description: Enrollment user attributes(Required).
          required: true
          schema:
            $ref: '#/definitions/UpdateEnrollmentUserV2Model'
      responses:
        '200':
          description: OK
          headers:
            Location:
              description: 'users/{uuid}'
              type: string
        '400':
          description: >-
            Bad Request 1. {5066: Error occurred during password enforcement: {
            }. } 2. {6: Enrollment organization group: { } not found or user
            does not have access to the organization group. } 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1.{1011: User doesn't have sufficient permissions to
            perform this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found  1. {12: Enrollment User not found : { } } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '422':
          description: >-
            1012 - Unprocessable Entity 1. {EmailAddress: EmailAddress is not
            valid.} 2. {PhoneNumber: PhoneNumber is not valid.} 3.
            {MobileNumber: MobileNumber is required for SMS notification.} 4.
            {MobileNumber: MobileNumber is not valid.} 5.
            {EnrollmentOrganizationGroupUuid: EnrollmentOrganizationGroupUuid
            has to be a guid value.} 6. {EnrollmentRoleUuid: EnrollmentRoleUuid
            has to be a guid value.} 7. {MessageType: MessageType is not valid.
            Available options are None, Email and SMS.} 8. {MessageTemplateUuid:
            MessageTemplateUuid has to be a guid value.} 9. {Password: Password
            cannot be greater than 128 characters.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
    delete:
      tags:
        - UsersV2
      summary: New - Delete an enrollment user by UUID
      description: >-
        Delete an enrollment user by UUID. &lt;br/&gt;&lt;br/&gt;UsersV2 API
        support syncing of users into the Workspace ONE Access from Workspace
        ONE UEM.
      operationId: UsersV2_DeleteAsync
      consumes:
        - application/json
      produces:
        - application/json;version=2
      parameters:
        - name: uuid
          in: path
          description: Identifier of an enrollment user(Required).
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: >-
            Bad Request 1. {9. User has enrolled devices, cant be deleted.} 2.
            {6198. User is associated to an Apple Business Manager or Apple
            School Manager registration record or profile. It cannot be deleted.
            Please remove the association and try again.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '403':
          description: >-
            Forbidden 1. {2: User doesn't have sufficient permissions to perform
            this operation.} 
          schema:
            $ref: '#/definitions/BaseExceptionModel'
        '404':
          description: 'Not Found 1. {12: Enrollment User not found : { } } '
          schema:
            $ref: '#/definitions/BaseExceptionModel'
      security:
        - BasicAuth: []
        - CmsAuth: []
        - ApiKeyAuth: []
definitions:
  AdminV2Model:
    description: Represents an admin user V2.
    type: object
    properties:
      username:
        description: Gets or sets name of the admin user.
        type: string
        xml:
          name: Username
      password:
        description: Gets or sets password of the admin user.
        type: string
        xml:
          name: Password
      firstName:
        description: Gets or sets firstName of the admin user.
        type: string
        xml:
          name: FirstName
      lastName:
        description: Gets or sets lastName of the admin user.
        type: string
        xml:
          name: LastName
      email:
        description: Gets or sets email address of the admin user.
        type: string
        xml:
          name: Email
      timeZone:
        description: Gets or sets time zone.
        type: string
        xml:
          name: TimeZone
      locale:
        description: Gets or sets culture code.
        type: string
        xml:
          name: Locale
      initialLandingPage:
        description: Gets or sets initial landing page of AirWatch console.
        type: string
        xml:
          name: InitialLandingPage
      isActiveDirectoryUser:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user is LDAP/AD user.
        type: boolean
        xml:
          name: IsActiveDirectoryUser
      requiresPasswordChange:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user requires to change the password on next login.
        type: boolean
        xml:
          name: RequiresPasswordChange
      roles:
        description: Gets or sets roles associated with the admin user.
        type: array
        items:
          $ref: '#/definitions/RoleV2Model'
        xml:
          name: Roles
      messageTemplateId:
        format: int32
        description: Gets or sets message template ID.
        type: integer
        xml:
          name: MessageTemplateId
      messageTemplateUuid:
        format: uuid
        description: Gets or sets message template UUID.
        type: string
        xml:
          name: MessageTemplateUuid
        example: 00000000-0000-0000-0000-000000000000
      messageType:
        format: int32
        description: Gets or sets message type.
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 8
          - 9
          - 10
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31
          - 32
          - 33
          - 34
          - 35
          - 36
          - 37
          - 38
          - 39
          - 40
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 47
          - 48
          - 49
          - 50
        type: integer
        xml:
          name: MessageType
      vIDMElevationStatus:
        format: int32
        description: Gets or sets elevation status.
        enum:
          - 1
          - 2
        type: integer
        xml:
          name: ElevationStatus
      organizationGroupId:
        format: int32
        description: Gets or sets organization group ID.
        type: integer
        xml:
          name: OrganizationGroupId
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
  RoleV2Model:
    description: Contains admin user role information
    type: object
    properties:
      name:
        description: Name of the role
        type: string
        xml:
          name: Name
      organizationGroupId:
        format: int32
        description: Gets or sets organization group ID.
        type: integer
        xml:
          name: OrganizationGroupId
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
  EntityId:
    type: object
    properties:
      Value:
        format: int64
        type: integer
        readOnly: true
        xml:
          name: Value
    example:
      Value: 1
  BaseExceptionModel:
    description: Base model for exception.
    type: object
    properties:
      errorCode:
        format: int32
        description: Gets or sets application error code.
        type: integer
        xml:
          name: ErrorCode
      message:
        description: Gets or sets friendly error message.
        type: object
        xml:
          name: Message
      activityId:
        format: uuid
        description: Gets or sets transactionId of the request.
        type: string
        xml:
          name: ActivityId
        example: 00000000-0000-0000-0000-000000000000
      links:
        description: Gets or sets list of hypermedia link.
        type: array
        items:
          $ref: '#/definitions/Link'
        xml:
          name: Links
          wrapped: true
    xml:
      name: AirWatchFaultContract
      namespace: 'http://www.air-watch.com/'
  Link:
    description: The link.
    type: object
    properties:
      Rel:
        description: Gets or sets relational links.
        type: string
        xml:
          name: Rel
      Href:
        description: Gets or sets hyper text reference.
        type: string
        xml:
          name: Href
      Title:
        description: Gets or sets title of the link.
        type: string
        xml:
          name: Title
    xml:
      name: Link
      namespace: 'http://www.air-watch.com/webapi/resources'
  IActionResult:
    description: interface for HttpActionResult.
    type: object
    properties:
      RequestQuery:
        $ref: '#/definitions/IRequestQuery'
        description: Gets or sets the RequestQuery.
        xml:
          name: RequestQuery
      RequestMessage:
        description: Gets or sets the RequestMessage.
        type: object
        xml:
          name: RequestMessage
      HttpStatusCode:
        format: int32
        description: Gets or sets HttpStatusCode.
        enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
        type: integer
        xml:
          name: HttpStatusCode
      RetryAfter:
        description: Gets or sets retry-after value.
        type: string
        xml:
          name: RetryAfter
      Model:
        description: Gets or sets Model.
        type: object
        xml:
          name: Model
      Stream:
        $ref: '#/definitions/Stream'
        description: Gets or sets Stream.
        xml:
          name: Stream
      PartialContentRange:
        $ref: '#/definitions/RangeHeaderValue'
        description: Gets or sets partial content range.
        xml:
          name: PartialContentRange
      ByteArray:
        format: byte
        description: Gets or sets ByteArray.
        type: string
        xml:
          name: ByteArray
      FileName:
        description: 'Gets or sets FileName {Will be set in the content-disposition header}.'
        type: string
        xml:
          name: FileName
      MediaType:
        description: Gets or sets MediaType.
        type: string
        xml:
          name: MediaType
      OnStreamAvailable:
        $ref: '#/definitions/Action`3'
        description: Gets or sets OnStreamAvailable.
        xml:
          name: OnStreamAvailable
      ETagHeaderValue:
        $ref: '#/definitions/EntityTagHeaderValue'
        description: Gets or sets ETagHeaderValue.
        xml:
          name: ETagHeaderValue
      AcceptsByteRanges:
        description: >-
          Gets or sets a value indicating whether gets or sets a value which
          indicates whether a range byte request for a stream is accepted or
          not.
        type: boolean
        xml:
          name: AcceptsByteRanges
      SendETagHeaderValue:
        description: >-
          Gets or sets a value indicating whether gets or sets the option to
          include ETagHeaderValue.
        type: boolean
        xml:
          name: SendETagHeaderValue
      LocationHeaderValue:
        description: Gets or sets LocationHeaderValue.
        type: string
        xml:
          name: LocationHeaderValue
      CacheControlValue:
        $ref: '#/definitions/CacheControlHeaderValue'
        description: Gets or sets CacheControlValue.
        xml:
          name: CacheControlValue
      ContentLength:
        format: int64
        description: Gets or sets ContentLength.
        type: integer
        xml:
          name: ContentLength
      ResponseDateTimeFormat:
        description: Gets or sets dateTime format for response.
        type: string
        xml:
          name: ResponseDateTimeFormat
      HttpResponseMessage:
        description: Gets or sets HttpResponseMessage.
        type: object
        xml:
          name: HttpResponseMessage
  IRequestQuery:
    description: "Interface for IAwRequestQuery\r\nThis will hold all the required data for a request and will be filled from ModelBinder."
    type: object
    properties:
      QueryParams:
        description: >-
          Gets or sets Query Parameters. For e.g. any query string parameters
          will be extracted to key,value pair and stored here.
        type: object
        additionalProperties:
          type: string
        xml:
          name: QueryParams
      TenantContext:
        $ref: '#/definitions/ITenantContext'
        description: >-
          Gets or sets IAwTenantContext. Will hold the tenant details, which
          will be filled as part of the tenant validation handler.
        xml:
          name: TenantContext
      RequestMethod:
        $ref: '#/definitions/HttpMethod'
        description: Gets or sets RequestMethod. Will be used to write custom rules.
        xml:
          name: RequestMethod
      ActionName:
        description: Gets or sets ActionName.
        type: string
        xml:
          name: ActionName
      AllowedUriQueryChars:
        description: Gets or sets allowed Characters in Query String.
        type: array
        items:
          type: string
        xml:
          name: AllowedUriQueryChars
  Stream:
    type: object
    properties:
      __identity:
        type: object
  RangeHeaderValue:
    type: object
    properties:
      Unit:
        type: string
        xml:
          name: Unit
      Ranges:
        type: array
        items:
          $ref: '#/definitions/RangeItemHeaderValue'
        readOnly: true
        xml:
          name: Ranges
  Action`3:
    type: object
    properties:
      Method:
        $ref: '#/definitions/MethodInfo'
        readOnly: true
        xml:
          name: Method
      Target:
        type: object
        readOnly: true
        xml:
          name: Target
  EntityTagHeaderValue:
    type: object
    properties:
      Tag:
        type: string
        readOnly: true
        xml:
          name: Tag
      IsWeak:
        type: boolean
        readOnly: true
        xml:
          name: IsWeak
  CacheControlHeaderValue:
    type: object
    properties:
      NoCache:
        type: boolean
        xml:
          name: NoCache
      NoCacheHeaders:
        type: array
        items:
          type: string
        readOnly: true
        xml:
          name: NoCacheHeaders
      NoStore:
        type: boolean
        xml:
          name: NoStore
      MaxAge:
        type: string
        xml:
          name: MaxAge
      SharedMaxAge:
        type: string
        xml:
          name: SharedMaxAge
      MaxStale:
        type: boolean
        xml:
          name: MaxStale
      MaxStaleLimit:
        type: string
        xml:
          name: MaxStaleLimit
      MinFresh:
        type: string
        xml:
          name: MinFresh
      NoTransform:
        type: boolean
        xml:
          name: NoTransform
      OnlyIfCached:
        type: boolean
        xml:
          name: OnlyIfCached
      Public:
        type: boolean
        xml:
          name: Public
      Private:
        type: boolean
        xml:
          name: Private
      PrivateHeaders:
        type: array
        items:
          type: string
        readOnly: true
        xml:
          name: PrivateHeaders
      MustRevalidate:
        type: boolean
        xml:
          name: MustRevalidate
      ProxyRevalidate:
        type: boolean
        xml:
          name: ProxyRevalidate
      Extensions:
        type: array
        items:
          $ref: '#/definitions/NameValueHeaderValue'
        readOnly: true
        xml:
          name: Extensions
  ITenantContext:
    description: >-
      Contract for TenantContext. Will be exposed from RequestQuery and will be
      injected to every controller actions and Business method.
    type: object
    properties:
      TenantCode:
        description: Gets or sets TenantCode. Uniquely identify the tenant for the request.
        type: string
        xml:
          name: TenantCode
      OrganizationgroupId:
        $ref: '#/definitions/EntityId'
        description: Gets or sets Organization Group ID.
        xml:
          name: OrganizationgroupId
  HttpMethod:
    type: object
    properties:
      Method:
        type: string
        readOnly: true
        xml:
          name: Method
  RangeItemHeaderValue:
    type: object
    properties:
      From:
        format: int64
        type: integer
        readOnly: true
        xml:
          name: From
      To:
        format: int64
        type: integer
        readOnly: true
        xml:
          name: To
  MethodInfo:
    type: object
    properties: {}
  NameValueHeaderValue:
    type: object
    properties:
      Name:
        type: string
        readOnly: true
        xml:
          name: Name
      Value:
        type: string
        xml:
          name: Value
  RoleModel:
    description: Represents role of admin user.
    type: object
    properties:
      Id:
        format: int32
        description: Gets or sets role Identifier.
        type: integer
        xml:
          name: Id
      Uuid:
        format: uuid
        description: Gets or sets role UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      Name:
        description: Gets or sets name of role.
        type: string
        xml:
          name: Name
      Description:
        description: Gets or sets description of role.
        type: string
        xml:
          name: Description
      LocationGroup:
        description: Gets or sets location Group of role.
        type: string
        xml:
          name: LocationGroup
      LocationGroupId:
        description: Gets or sets location Group Id of role.
        type: string
        xml:
          name: LocationGroupId
      OrganizationGroupUuid:
        description: Gets or sets organization Group UUID of role.
        type: string
        xml:
          name: OrganizationGroupUuid
      IsActive:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          role is active or not.
        type: boolean
        xml:
          name: IsActive
      UserLinkId:
        format: int32
        description: Gets or sets userLink ID for the role to OG mapping.
        type: integer
        xml:
          name: UserLinkId
    xml:
      name: RoleModel
      namespace: 'http://www.air-watch.com/servicemodel/resources'
  'RoleModel ':
    description: Represents role of admin user.
    type: object
    properties:
      Id:
        format: int32
        description: Gets or sets role Identifier.
        type: integer
        xml:
          name: Id
      Uuid:
        format: uuid
        description: Gets or sets role UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      Name:
        description: Gets or sets name of role.
        type: string
        xml:
          name: Name
      Description:
        description: Gets or sets description of role.
        type: string
        xml:
          name: Description
      LocationGroup:
        description: Gets or sets location Group of role.
        type: string
        xml:
          name: LocationGroup
      LocationGroupId:
        description: Gets or sets location Group Id of role.
        type: string
        xml:
          name: LocationGroupId
      OrganizationGroupUuid:
        description: Gets or sets organization Group UUID of role.
        type: string
        xml:
          name: OrganizationGroupUuid
      IsActive:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          role is active or not.
        type: boolean
        xml:
          name: IsActive
      UserLinkId:
        format: int32
        description: Gets or sets userLink ID for the role to OG mapping.
        type: integer
        xml:
          name: UserLinkId
    xml:
      name: Role
  'EntityId ':
    type: object
    properties:
      Value:
        format: int64
        type: integer
        readOnly: true
        xml:
          name: Value
    xml:
      name: Id
    example:
      Value: 0
  AdminUser:
    description: Represents an admin account.
    type: object
    properties:
      UserName:
        description: Gets or sets user Name of admin.
        type: string
        xml:
          name: UserName
      Password:
        description: Gets or sets admin user password.
        maxLength: 50
        minLength: 0
        type: string
        xml:
          name: Password
      FirstName:
        description: Gets or sets first Name of admin user.
        type: string
        xml:
          name: FirstName
      LastName:
        description: Gets or sets last Name of admin user.
        type: string
        xml:
          name: LastName
      Email:
        description: Gets or sets admin user email address.
        type: string
        xml:
          name: Email
      LocationGroup:
        description: Gets or sets location group of the admin user.
        type: string
        xml:
          name: LocationGroup
      LocationGroupId:
        description: Gets or sets location group id of the admin user.
        type: string
        xml:
          name: LocationGroupId
      OrganizationGroupUuid:
        description: Gets or sets organization group UUID of the admin user.
        type: string
        xml:
          name: OrganizationGroupUuid
      TimeZone:
        description: Gets or sets time zone.
        type: string
        xml:
          name: TimeZone
      TimeZoneIdentifier:
        description: Gets or sets time zone label key.
        type: string
        xml:
          name: TimeZoneIdentifier
      Locale:
        description: Gets or sets locale.
        type: string
        xml:
          name: Locale
      InitialLandingPage:
        description: Gets or sets initial landing page.
        type: string
        xml:
          name: InitialLandingPage
      LastLoginTimeStamp:
        format: date-time
        description: Gets or sets last login time stamp of admin user.
        type: string
        xml:
          name: LastLoginTimeStamp
      Roles:
        description: Gets or sets roles associated with the admin user.
        type: array
        items:
          $ref: '#/definitions/RoleModel '
          xml:
            name: Role
        xml:
          name: Roles
          wrapped: true
      IsActiveDirectoryUser:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user is LDAP/AD user.
        type: boolean
        xml:
          name: IsActiveDirectoryUser
      RequiresPasswordChange:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user requires to change the password on next login.
        type: boolean
        xml:
          name: RequiresPasswordChange
      MessageType:
        format: int32
        description: Gets or sets message type.
        enum:
          - 0
          - 1
          - 2
          - -1
        type: integer
        xml:
          name: MessageType
      MessageTemplateId:
        format: int32
        description: Gets or sets message template id.
        type: integer
        xml:
          name: MessageTemplateId
      ExternalId:
        description: Gets or sets external id.
        type: string
        xml:
          name: ExternalId
      Id:
        $ref: '#/definitions/EntityId '
        xml:
          name: Id
      Uuid:
        format: uuid
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: AdminUser
      namespace: 'http://www.air-watch.com/servicemodel/resources'
    example:
      UserName: TempAdmin
      Password: '******'
      FirstName: Temp
      LastName: Temp
      Email: noreply@vmware.com
      LocationGroup: Global
      LocationGroupId: Global
      OrganizationGroupUuid: Text value
      TimeZone: GMT
      TimeZoneIdentifier: America/New_York
      Locale: en-us
      InitialLandingPage: Devices > Dashboard
      LastLoginTimeStamp: '2023-08-24T07:10:45.3629165+01:00'
      Roles:
        - Id: 10001
          Uuid: 4317cd66-11c4-4d4c-8ec7-57839eb9f993
          Name: Temp Administrator
          Description: Temp Administrator
          LocationGroup: Global
          LocationGroupId: Global
          OrganizationGroupUuid: Text value
          IsActive: true
          UserLinkId: 10001
      IsActiveDirectoryUser: true
      RequiresPasswordChange: false
      MessageType: 0
      MessageTemplateId: 15
      ExternalId: c91a9f19-2032-4a8d-ab87-3a0ce579268e
      Id:
        Value: 1
      Uuid: cabc6d76-bf8f-4fc3-b57c-b70f41aaefac
  RequestQuery:
    description: Implementation for RequestQuery.
    type: object
    properties: {}
  AdminSearchResultV2:
    description: Admin search result v2.
    type: object
    properties:
      admins:
        description: Gets or sets array of Admin Users.
        type: array
        items:
          $ref: '#/definitions/AdminUserV2'
        xml:
          name: Admins
          wrapped: true
      Page:
        format: int32
        type: integer
        xml:
          name: Page
      PageSize:
        format: int32
        type: integer
        xml:
          name: PageSize
      Total:
        format: int32
        type: integer
        xml:
          name: Total
    xml:
      name: AdminSearchResultV2
      namespace: 'http://www.air-watch.com/servicemodel/resources'
    example:
      admins:
        - uuid: c00396ab-9a9a-40e7-9beb-80e104bec427
          username: JohnDoe
          firstName: John
          lastName: Doe
          email: jdoe@vmware.com
          LocationGroup: Global
          LocationGroupId: Global
          organizationGroupUuid: 705e9a4c-8db9-46d4-9035-6e2cb8f867e3
          timeZone: EST
          TimeZoneIdentifier: America/New_York
          locale: en-US
          initialLandingPage: ~/Device/Dashboard
          LastLoginTimeStamp: '2023-08-24T07:10:45.5011553+01:00'
          isActiveDirectoryUser: true
          requiresPasswordChange: true
          roles:
            - uuid: ef248623-7ee6-4fa0-b5a8-5f5168dfe759
              organizationGroupUuid: 797fb183-39e4-4b2f-a6c3-453e31ca5a93
              Name: AirWatch Administrator
              Description: Temp Administrator
              LocationGroup: Global
              LocationGroupId: Global
              IsActive: true
              UserLinkId: 10001
          messageTemplateId: 1
          messageTemplateUuid: fc6bbc38-3491-4136-9537-35ffd042c42a
          messageType: 0
          ExternalId: c91a9f19-2032-4a8d-ab87-3a0ce579268e
      Page: 1
      PageSize: 2
      Total: 3
  AdminUserV2:
    description: Admin user v2.
    type: object
    properties:
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      username:
        description: Gets or sets name of the admin user.
        type: string
        xml:
          name: Username
      firstName:
        description: Gets or sets firstName of the admin user.
        type: string
        xml:
          name: FirstName
      lastName:
        description: Gets or sets lastName of the admin user.
        type: string
        xml:
          name: LastName
      email:
        description: Gets or sets email address of the admin user.
        type: string
        xml:
          name: Email
      LocationGroup:
        description: Gets or sets location group of the admin user.
        type: string
        xml:
          name: LocationGroup
      LocationGroupId:
        description: Gets or sets location group id of the admin user.
        type: string
        xml:
          name: LocationGroupId
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      timeZone:
        description: Gets or sets time zone.
        type: string
        xml:
          name: TimeZone
      TimeZoneIdentifier:
        description: Gets or sets time zone label key.
        type: string
        xml:
          name: TimeZoneIdentifier
      locale:
        description: Gets or sets culture code.
        type: string
        xml:
          name: Locale
      initialLandingPage:
        description: Gets or sets initial landing page of AirWatch console.
        type: string
        xml:
          name: InitialLandingPage
      LastLoginTimeStamp:
        format: date-time
        description: Gets or sets last login time stamp of admin user.
        type: string
        xml:
          name: LastLoginTimeStamp
      isActiveDirectoryUser:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user is LDAP/AD user.
        type: boolean
        xml:
          name: IsActiveDirectoryUser
      requiresPasswordChange:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user requires to change the password on next login.
        type: boolean
        xml:
          name: RequiresPasswordChange
      roles:
        description: Gets or sets roles associated with the admin user.
        type: array
        items:
          $ref: '#/definitions/RoleV3Model'
        xml:
          name: Roles
      messageTemplateId:
        format: int32
        description: Gets or sets message template ID.
        type: integer
        xml:
          name: MessageTemplateId
      messageTemplateUuid:
        format: uuid
        description: Gets or sets message template UUID.
        type: string
        xml:
          name: MessageTemplateUuid
        example: 00000000-0000-0000-0000-000000000000
      messageType:
        format: int32
        description: Gets or sets message type.
        enum:
          - 0
          - 1
          - 2
          - -1
        type: integer
        xml:
          name: MessageType
      ExternalId:
        description: Gets or sets external id.
        type: string
        xml:
          name: ExternalId
  RoleV3Model:
    description: Role v3 model.
    type: object
    properties:
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      Name:
        description: Gets or sets the Name.
        type: string
        xml:
          name: Name
      Description:
        description: Gets or sets the Description.
        type: string
        xml:
          name: Description
      LocationGroup:
        description: Gets or sets the LocationGroup.
        type: string
        xml:
          name: LocationGroup
      LocationGroupId:
        description: Gets or sets location Group Id of role.
        type: string
        xml:
          name: LocationGroupId
      IsActive:
        description: Gets or sets a value indicating whether IsActive is true or not.
        type: boolean
        xml:
          name: IsActive
      UserLinkId:
        format: int32
        description: Gets or sets the UserLinkId.
        type: integer
        xml:
          name: UserLinkId
  'AdminUser ':
    title: AdminUser
    description: Represents an admin account.
    type: object
    properties:
      Password:
        description: Gets or sets admin user password.
        maxLength: 50
        minLength: 0
        type: string
        xml:
          name: Password
      OrganizationGroupUuid:
        description: Gets or sets organization group UUID of the admin user.
        type: string
        xml:
          name: OrganizationGroupUuid
      TimeZoneIdentifier:
        description: Gets or sets time zone label key.
        type: string
        xml:
          name: TimeZoneIdentifier
      IsActiveDirectoryUser:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user is LDAP/AD user.
        type: boolean
        xml:
          name: IsActiveDirectoryUser
      RequiresPasswordChange:
        description: >-
          Gets or sets a value indicating whether flag to indicate whether the
          admin user requires to change the password on next login.
        type: boolean
        xml:
          name: RequiresPasswordChange
      MessageType:
        format: int32
        description: Gets or sets message type.
        enum:
          - 0
          - 1
          - 2
          - -1
        type: integer
        xml:
          name: MessageType
      MessageTemplateId:
        format: int32
        description: Gets or sets message template id.
        type: integer
        xml:
          name: MessageTemplateId
      ExternalId:
        description: Gets or sets external id.
        type: string
        xml:
          name: ExternalId
      Uuid:
        format: uuid
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: AdminUser
      namespace: 'http://www.air-watch.com/servicemodel/resources'
    example:
      Password: '******'
      OrganizationGroupUuid: Text value
      TimeZoneIdentifier: America/New_York
      LastLoginTimeStamp: '0001-01-01T00:00:00'
      IsActiveDirectoryUser: true
      RequiresPasswordChange: false
      MessageType: 0
      MessageTemplateId: 15
      ExternalId: c91a9f19-2032-4a8d-ab87-3a0ce579268e
      Id:
        Value: 0
      Uuid: 31e4ebf2-f55c-45f5-87f4-7326e2ab7e6a
  PreviewAdvancedLdapSyncJobResponseV2Model:
    description: Advanced ldap sync job preview response model.
    type: object
    properties:
      advanced_ldap_sync_job_uuid:
        format: uuid
        description: >-
          The unique identifier for the created advanced ldap sync job which is
          to be previewed.
        type: string
        xml:
          name: AdvancedLdapSyncJobUuid
        example: 00000000-0000-0000-0000-000000000000
      status:
        format: int32
        description: The status of the advanced ldap sync job process.
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
        type: integer
        xml:
          name: Status
      users_count:
        format: int32
        description: Total number of enrollment users.
        type: integer
        xml:
          name: UsersCount
      user_list:
        description: The list of enrollment users.
        type: array
        items:
          $ref: '#/definitions/AdvancedLdapSyncEnrollmentUserV2Model'
        xml:
          name: UserList
      total_results:
        format: int64
        description: Total Number of records.
        type: integer
        xml:
          name: TotalResults
      additional_info:
        $ref: '#/definitions/HypermediaV2Model'
        description: Gets or sets Hypermedia content for the result.
        xml:
          name: AdditionalInfo
    example:
      advanced_ldap_sync_job_uuid: b91df62e-7013-40c1-afef-5be73d4330f7
      status: INITIALIZED
      users_count: 25
      user_list:
        - advanced_ldap_sync_staging_id: 1
          enrollment_user_uuid: c726e1cd-5e13-4c73-9441-10aab11c7938
          job_status: 3
          domain: Text value
          ldap_definition_id: 1033
          location_group_id: 7
          user_name: johnd
          first_name: Text value
          middle_name: Text value
          last_name: Text value
          full_name: Text value
          display_name: Text value
          first_name_internal: Text value
          email_address_internal: Text value
          last_name_internal: Text value
          full_name_internal: Text value
          display_name_internal: Text value
          phone_number_internal: Text value
          distinguished_name: Text value
          trimmed_distinguished_name: Text value
          email_address: user@domain.com
          email_user_account: Text value
          employee_identifier: Text value
          phone_number: Text value
          mobile_phone: Text value
          active: true
          lockout_time: Text value
          external_id: Text value
          user_principle_name: Text value
          department: Text value
          manager_distinguished_name: Text value
          aad_mapping_attribute: Text value
          security_identifier: Text value
          cost_center: Text value
          custom_attribute1: Text value
          custom_attribute2: Text value
          custom_attribute3: Text value
          custom_attribute4: Text value
          custom_attribute5: Text value
      total_results: 2500
      additional_info:
        links: []
        id: 1234
        uuid: fc5f9269-fa6b-47f0-b624-6a42fbbe05a1
  AdvancedLdapSyncEnrollmentUserV2Model:
    description: The enrollment user model entity.
    type: object
    properties:
      advanced_ldap_sync_staging_id:
        format: int32
        description: Advanced Ldap Sync Staging ID.
        type: integer
        xml:
          name: AdvancedLdapSyncStagingId
      enrollment_user_uuid:
        format: uuid
        description: Enrollment User UUID.
        type: string
        xml:
          name: EnrollmentUserUuid
        example: 00000000-0000-0000-0000-000000000000
      job_status:
        format: int32
        description: Enrollment User Job Status.
        type: integer
        xml:
          name: JobStatus
      domain:
        description: Enrollment user domain.
        type: string
        xml:
          name: Domain
      ldap_definition_id:
        format: int32
        description: Ldap Definition ID.
        type: integer
        xml:
          name: LdapDefinitionId
      location_group_id:
        format: int32
        description: Location Group ID.
        type: integer
        xml:
          name: LocationGroupId
      user_name:
        description: Username of the enrollment user.
        type: string
        xml:
          name: UserName
      first_name:
        description: Firstname of the enrollment user.
        type: string
        xml:
          name: FirstName
      middle_name:
        description: Middle name of the enrollment user.
        type: string
        xml:
          name: MiddleName
      last_name:
        description: Lastname of the enrollment user.
        type: string
        xml:
          name: LastName
      full_name:
        description: Fullname of the enrollment user.
        type: string
        xml:
          name: FullName
      display_name:
        description: Display name of the enrollment user.
        type: string
        xml:
          name: DisplayName
      first_name_internal:
        description: Firstname Internal of the enrollment user.
        type: string
        xml:
          name: FirstNameInternal
      email_address_internal:
        description: Email address Internal of the enrollment user.
        type: string
        xml:
          name: EmailAddressInternal
      last_name_internal:
        description: Lastname Internal of the enrollment user.
        type: string
        xml:
          name: LastNameInternal
      full_name_internal:
        description: Fullname Internal of the enrollment user.
        type: string
        xml:
          name: FullNameInternal
      display_name_internal:
        description: Display name  Internal of the enrollment user.
        type: string
        xml:
          name: DisplayNameInternal
      phone_number_internal:
        description: Phone number Internal of the enrollment user.
        type: string
        xml:
          name: PhoneNumberInternal
      distinguished_name:
        description: The distinguished name.
        type: string
        xml:
          name: DistinguishedName
      trimmed_distinguished_name:
        description: The distinguished name.
        type: string
        xml:
          name: TrimmedDistinguishedName
      email_address:
        description: Email address of the enrollment user.
        type: string
        xml:
          name: EmailAddress
      email_user_account:
        description: Exchange user account name of the enrollment user.
        type: string
        xml:
          name: EmailUserAccount
      employee_identifier:
        description: The employee identifier for the enrollment user.
        type: string
        xml:
          name: EmployeeIdentifier
      phone_number:
        description: Phone number of the enrollment user.
        type: string
        xml:
          name: PhoneNumber
      mobile_phone:
        description: Mobile phone number of the enrollment user.
        type: string
        xml:
          name: MobilePhone
      active:
        description: >-
          Gets or sets a value indicating whether the enrollment user is active
          or not.
        type: boolean
        xml:
          name: Active
      lockout_time:
        description: The lockout time of the enrollment user.
        type: string
        xml:
          name: LockoutTime
      external_id:
        description: Unique identifier for the ldap user.
        type: string
        xml:
          name: ExternalId
      user_principle_name:
        description: Active directory user principle name for the user.
        type: string
        xml:
          name: UserPrincipleName
      department:
        description: Department name of the enrollment user.
        type: string
        xml:
          name: Department
      manager_distinguished_name:
        description: The name of the manager distinguished.
        type: string
        xml:
          name: ManagerDistinguishedName
      aad_mapping_attribute:
        description: The AAD mapping attribute.
        type: string
        xml:
          name: AadMappingAttribute
      security_identifier:
        description: The unique security identifier(sid) for the user.
        type: string
        xml:
          name: SecurityIdentifier
      cost_center:
        description: The cost center for the user.
        type: string
        xml:
          name: CostCenter
      custom_attribute1:
        description: Custom attribute 1.
        type: string
        xml:
          name: CustomAttribute1
      custom_attribute2:
        description: Custom attribute 2.
        type: string
        xml:
          name: CustomAttribute2
      custom_attribute3:
        description: Custom attribute 3.
        type: string
        xml:
          name: CustomAttribute3
      custom_attribute4:
        description: Custom attribute 4.
        type: string
        xml:
          name: CustomAttribute4
      custom_attribute5:
        description: Custom attribute 5.
        type: string
        xml:
          name: CustomAttribute5
  HypermediaV2Model:
    description: The aw hypermedia model.
    type: object
    properties:
      links:
        description: Gets list of hypermedia link.
        type: array
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        xml:
          name: Links
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
  EnrollmentUserDetailsResponseModel:
    description: The enrollment user entity.
    type: object
    properties:
      enrollment_user_id:
        format: int32
        description: Enrollment User ID.
        type: integer
        xml:
          name: EnrollmentUserId
      enrollment_user_uuid:
        format: uuid
        description: Enrollment User UUID.
        type: string
        xml:
          name: EnrollmentUserUuid
        example: 00000000-0000-0000-0000-000000000000
      domain:
        description: Enrollment user domain.
        type: string
        xml:
          name: Domain
      ldap_definition_id:
        format: int32
        description: Ldap Definition ID.
        type: integer
        xml:
          name: LdapDefinitionId
      location_group_id:
        format: int32
        description: Location Group ID.
        type: integer
        xml:
          name: LocationGroupId
      user_name:
        description: Username of the enrollment user.
        type: string
        xml:
          name: UserName
      first_name:
        description: Firstname of the enrollment user.
        type: string
        xml:
          name: FirstName
      middle_name:
        description: Middle name of the enrollment user.
        type: string
        xml:
          name: MiddleName
      last_name:
        description: Lastname of the enrollment user.
        type: string
        xml:
          name: LastName
      full_name:
        description: Fullname of the enrollment user.
        type: string
        xml:
          name: FullName
      display_name:
        description: Display name of the enrollment user.
        type: string
        xml:
          name: DisplayName
      first_name_internal:
        description: Firstname Internal of the enrollment user.
        type: string
        xml:
          name: FirstNameInternal
      email_address_internal:
        description: Email address Internal of the enrollment user.
        type: string
        xml:
          name: EmailAddressInternal
      last_name_internal:
        description: Lastname Internal of the enrollment user.
        type: string
        xml:
          name: LastNameInternal
      full_name_internal:
        description: Fullname Internal of the enrollment user.
        type: string
        xml:
          name: FullNameInternal
      display_name_internal:
        description: Display name  Internal of the enrollment user.
        type: string
        xml:
          name: DisplayNameInternal
      phone_number_internal:
        description: Phone number Internal of the enrollment user.
        type: string
        xml:
          name: PhoneNumberInternal
      distinguished_name:
        description: The distinguished name.
        type: string
        xml:
          name: DistinguishedName
      trimmed_distinguished_name:
        description: The distinguished name.
        type: string
        xml:
          name: TrimmedDistinguishedName
      email_address:
        description: Email address of the enrollment user.
        type: string
        xml:
          name: EmailAddress
      email_user_account:
        description: Exchange user account name of the enrollment user.
        type: string
        xml:
          name: EmailUserAccount
      employee_identifier:
        description: The employee identifier for the enrollment user.
        type: string
        xml:
          name: EmployeeIdentifier
      phone_number:
        description: Phone number of the enrollment user.
        type: string
        xml:
          name: PhoneNumber
      mobile_phone:
        description: Mobile phone number of the enrollment user.
        type: string
        xml:
          name: MobilePhone
      active:
        description: >-
          Gets or sets a value indicating whether the enrollment user is active
          or not.
        type: boolean
        xml:
          name: Active
      lockout_time:
        description: The lockout time of the enrollment user.
        type: string
        xml:
          name: LockoutTime
      external_id:
        description: Unique identifier for the ldap user.
        type: string
        xml:
          name: ExternalId
      user_principle_name:
        description: Active directory user principle name for the user.
        type: string
        xml:
          name: UserPrincipleName
      department:
        description: Department name of the enrollment user.
        type: string
        xml:
          name: Department
      manager_distinguished_name:
        description: The name of the manager distinguished.
        type: string
        xml:
          name: ManagerDistinguishedName
      aad_mapping_attribute:
        description: The AAD mapping attribute.
        type: string
        xml:
          name: AadMappingAttribute
      security_identifier:
        description: The unique security identifier(sid) for the user.
        type: string
        xml:
          name: SecurityIdentifier
      cost_center:
        description: The cost center for the user.
        type: string
        xml:
          name: CostCenter
      custom_attribute1:
        description: Custom attribute 1.
        type: string
        xml:
          name: CustomAttribute1
      custom_attribute2:
        description: Custom attribute 2.
        type: string
        xml:
          name: CustomAttribute2
      custom_attribute3:
        description: Custom attribute 3.
        type: string
        xml:
          name: CustomAttribute3
      custom_attribute4:
        description: Custom attribute 4.
        type: string
        xml:
          name: CustomAttribute4
      custom_attribute5:
        description: Custom attribute 5.
        type: string
        xml:
          name: CustomAttribute5
    example:
      enrollment_user_id: 1
      enrollment_user_uuid: 50a75b66-4558-4055-bb3f-085dfe114ba0
      domain: Text value
      ldap_definition_id: 1033
      location_group_id: 7
      user_name: johnd
      first_name: Text value
      middle_name: Text value
      last_name: Text value
      full_name: Text value
      display_name: Text value
      first_name_internal: Text value
      email_address_internal: Text value
      last_name_internal: Text value
      full_name_internal: Text value
      display_name_internal: Text value
      phone_number_internal: Text value
      distinguished_name: Text value
      trimmed_distinguished_name: Text value
      email_address: user@domain.com
      email_user_account: Text value
      employee_identifier: Text value
      phone_number: Text value
      mobile_phone: Text value
      active: true
      lockout_time: Text value
      external_id: Text value
      user_principle_name: Text value
      department: Text value
      manager_distinguished_name: Text value
      aad_mapping_attribute: Text value
      security_identifier: Text value
      cost_center: Text value
      custom_attribute1: Text value
      custom_attribute2: Text value
      custom_attribute3: Text value
      custom_attribute4: Text value
      custom_attribute5: Text value
  ApnsCertificateV2Model:
    description: Apple Push Notification service Certificate.
    type: object
    properties:
      current_setting:
        description: >-
          Gets or sets the current setting indicating whether APNs certificate
          is inherited or overridden.
        type: string
        xml:
          name: CurrentSetting
      certificate_type:
        format: int32
        description: Gets or sets the certificate type.
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        type: integer
        xml:
          name: CertificateType
      issued_to:
        description: Gets or sets the subject distinguished name from the certificate.
        type: string
        xml:
          name: IssuedTo
      issued_by:
        description: Gets or sets the name of the certificate issuer.
        type: string
        xml:
          name: IssuedBy
      valid_from:
        format: date-time
        description: Gets or sets the effective date of the certificate in ISO 8601 format.
        type: string
        xml:
          name: ValidFrom
      valid_to:
        format: date-time
        description: >-
          Gets or sets the expiration date for the certificate in ISO 8601
          format.
        type: string
        xml:
          name: ValidTo
      thumbprint:
        description: Gets or sets the thumbprint of the certificate.
        type: string
        xml:
          name: Thumbprint
      apple_id:
        description: Gets or sets the Apple ID used to create the certificate.
        type: string
        xml:
          name: AppleId
      child_permission:
        description: Gets or sets the child permission.
        type: string
        xml:
          name: ChildPermission
    example:
      current_setting: Override
      certificate_type: Unknown
      issued_to: >-
        C=US, CN=APSP:87a49627-b7de-4841-b2f1-13e6fa3d5193,
        OID.0.9.2342.19200300.100.1.1=com.apple.mgmt.External.87a49627-b7de-4841-b2f1-13e6fa3d5193
      issued_by: >-
        C=US, O=Apple Inc., OU=Apple Certification Authority, CN=Apple
        Application Integration 2 Certification Authority
      valid_from: '2023-08-24T07:10:46.0183547+01:00'
      valid_to: '2023-08-24T07:10:46.0183547+01:00'
      thumbprint: E42538A6AE913808A1463CDEFE5D3D52326E7920
      apple_id: nobody@vmware.com
      child_permission: Inherit or Override
  EnrollmentRestrictionsPoliciesResponseModel:
    description: >-
      The EnrollmentRestrictionsPoliciesModel containing the list of Enrollment
      Restriction policies for the given organization group.
    type: object
    properties:
      enrollment_restrictions_policies:
        description: Gets or sets Array of enrollment restriction policy search results
        type: array
        items:
          $ref: '#/definitions/EnrollmentRestrictionsPolicyResponseModel'
        xml:
          name: EnrollmentRestrictionsPoliciesResponseList
    example:
      enrollment_restrictions_policies:
        - name: Respolicy
          enrollment_restriction_policy_uuid: 90cef9a5-3687-49d7-afe6-05512d50a232
          organization_group_name: TestOg
          organization_group_uuid: 118ebdb7-4b3d-4bf4-997b-30820d7ef269
          user_groups_list:
            - 5c808c37-4651-44fa-af9c-4927cd67c4b8
  EnrollmentRestrictionsPolicyResponseModel:
    description: >-
      Contains the basic details of all the enrollment restriction policies for
      a given organization group.
    type: object
    properties:
      name:
        description: Enrollment restriction policy name.
        type: string
        xml:
          name: Name
      enrollment_restriction_policy_uuid:
        format: uuid
        description: Enrollment restriction policy uuid
        type: string
        xml:
          name: Enrollment_restriction_policy_uuid
        example: 00000000-0000-0000-0000-000000000000
      organization_group_name:
        description: organization group name.
        type: string
        xml:
          name: Organization_group_name
      organization_group_uuid:
        format: uuid
        description: Organization group uuid
        type: string
        xml:
          name: Organization_group_uuid
        example: 00000000-0000-0000-0000-000000000000
      user_groups_list:
        description: >-
          The User groups list model which contains list of User Group UUIDs to
          be assigned to the passed Enrollment Restriction Policy
        type: array
        items:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        xml:
          name: User_groups
    example:
      name: Respolicy
      enrollment_restriction_policy_uuid: 1029cc1a-8c9a-44ee-86b5-8ac5f578df8d
      organization_group_name: TestOg
      organization_group_uuid: b698aeac-d270-4f82-9345-898687004f7a
      user_groups_list:
        - 51ce96cf-2411-4039-a232-5eb6e7209615
  UserGroupsListModel:
    description: >-
      The User groups list model which contains list of User Group UUIDs to be
      assigned to the passed Enrollment Restriction Policy
    type: object
    properties:
      user_group_uuids:
        description: user group uuid
        type: array
        items:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        xml:
          name: User_group_uuids
      op:
        description: operation to be performed.
        type: string
        xml:
          name: Op
    example:
      user_group_uuids:
        - 4b452041-f5c1-4120-b9f1-322b51fc9e96
      op: only 'modify' operation supported for this endpoint
  AssignUserGroupsResponse:
    description: Contains the statuses of the bulk operation
    type: object
    properties:
      statusResponse:
        description: Response for batch operation
        type: array
        items:
          $ref: '#/definitions/AssignUserGroupsStatus'
        xml:
          name: StatusResponse
      _links:
        description: Gets a list of JSON HAL links.
        type: object
        additionalProperties:
          $ref: '#/definitions/JsonHalLinkModel'
        readOnly: true
        xml:
          name: Links
    example:
      statusResponse:
        - user_group_uuid: 6ad367dd-23ce-48ed-afac-1fc7c1e36b4a
          status: Text value
          message: Text value
      _links: {}
  AssignUserGroupsStatus:
    description: Operation status for assigned groups
    type: object
    properties:
      user_group_uuid:
        format: uuid
        description: user group uuid
        type: string
        xml:
          name: User_group_uuid
        example: 00000000-0000-0000-0000-000000000000
      status:
        description: Status of the operation
        type: string
        xml:
          name: Status
      message:
        description: Reason for failure
        type: string
        xml:
          name: Message
  JsonHalLinkModel:
    description: Defines a JSON HAL Link.
    type: object
    properties:
      href:
        description: Gets or sets HREF URL.
        type: string
  EventNotificationModel:
    description: The Event Notification model.
    type: object
    properties:
      TargetName:
        description: Gets or sets the Friendly name of the Target URL.
        type: string
        xml:
          name: TargetName
      TargetUrl:
        description: Gets or sets the URL to send the event notifications to.
        type: string
        xml:
          name: TargetUrl
      Username:
        description: Gets or sets the username required to access the Target URL.
        type: string
        xml:
          name: Username
      Password:
        description: Gets or sets the Password required to access the Target URL.
        type: string
        xml:
          name: Password
      Format:
        format: int32
        description: 'Gets or sets the format of the POST message: XML(0) or Json(1).'
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: Format
      IsActive:
        description: >-
          Gets or sets a value indicating whether indicates whether event
          notification's have been set to active or inactive.
        type: boolean
        xml:
          name: IsActive
      DeviceEvents:
        $ref: '#/definitions/DeviceEventsModel'
        description: Gets or sets device events that could occur for a device.
        xml:
          name: DeviceEvents
      organizationGroupId:
        format: int32
        description: Gets or sets organization group ID.
        type: integer
        xml:
          name: OrganizationGroupId
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: EventNotification
      namespace: 'http://www.air-watch.com/servicemodel/resources'
    example:
      TargetName: TestEventTargetName
      TargetUrl: 'https://examplenotificationurl.com'
      Username: ExampleUser
      Password: Pa$$word
      Format: 1
      IsActive: true
      DeviceEvents:
        Enrollment: true
        UnenrolledEnterpriseWipe: true
        Wipe: true
        CompromisedStatusChange: true
        Delete: true
        ComplianceStatusChange: true
        CheckOutCheckIn: true
        DeviceAttributes:
          AssetNumber: true
          FriendlyName: true
          OrganizationGroup: true
          UserEmailAddress: true
          Ownership: true
          OperatingSystem: true
          PhoneNumber: true
          DeviceMCC: true
      organizationGroupId: 1234
      organizationGroupUuid: 45eb61b6-9559-4122-b4d5-1b38c92c2644
      id: 1234
      uuid: d9419ee0-6b35-4a03-b432-d3e803e60cb0
  DeviceEventsModel:
    description: The Device Events model.
    type: object
    properties:
      Enrollment:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered to set the enrollment status of a device.
        type: boolean
        xml:
          name: Enrollment
      UnenrolledEnterpriseWipe:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered to unenroll and perform an enterprise wipe on
          a device.
        type: boolean
        xml:
          name: UnenrolledEnterpriseWipe
      Wipe:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered to wipe a device.
        type: boolean
        xml:
          name: Wipe
      CompromisedStatusChange:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a change in the setting of a compromised
          device.
        type: boolean
        xml:
          name: CompromisedStatusChange
      Delete:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a deletion of the device.
        type: boolean
        xml:
          name: Delete
      ComplianceStatusChange:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has changed the compliance status for a device.
        type: boolean
        xml:
          name: ComplianceStatusChange
      CheckOutCheckIn:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for device checked in and checked out by
          user.
        type: boolean
        xml:
          name: CheckOutCheckIn
      DeviceAttributes:
        $ref: '#/definitions/DeviceAttributesModel'
        description: >-
          Gets or sets device attribute properties that have been changed. These
          properties are triggered by an outbound event call.
        xml:
          name: DeviceAttributes
    xml:
      name: DeviceEvents
      namespace: 'http://www.air-watch.com/servicemodel/resources'
  DeviceAttributesModel:
    description: The device attributes model.
    type: object
    properties:
      AssetNumber:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a device asset number.
        type: boolean
        xml:
          name: AssetNumber
      FriendlyName:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a device friendly name.
        type: boolean
        xml:
          name: FriendlyName
      OrganizationGroup:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has triggered a changed organization group for a device.
        type: boolean
        xml:
          name: OrganizationGroup
      UserEmailAddress:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a existing user email address.
        type: boolean
        xml:
          name: UserEmailAddress
      Ownership:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for ownership of a device.
        type: boolean
        xml:
          name: Ownership
      OperatingSystem:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a device's operating system.
        type: boolean
        xml:
          name: OperatingSystem
      PhoneNumber:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a device's phone number.
        type: boolean
        xml:
          name: PhoneNumber
      DeviceMCC:
        description: >-
          Gets or sets a value indicating whether indicates whether an outbound
          event has been triggered for a device's MCC.
        type: boolean
        xml:
          name: DeviceMCC
    xml:
      name: DeviceAttributes
      namespace: 'http://www.air-watch.com/servicemodel/resources'
  BaseModel:
    description: Base class for ViewModels.
    type: object
    properties:
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
  HypermediaModel:
    description: The aw hypermedia model.
    type: object
    properties:
      Links:
        description: Gets list of hypermedia link.
        type: array
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        xml:
          name: Links
          wrapped: true
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: Info
      namespace: 'http://www.air-watch.com/webapi/resources'
  'HypermediaModel ':
    description: The aw hypermedia model.
    type: object
    properties:
      Links:
        description: Gets list of hypermedia link.
        type: array
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        xml:
          name: Links
          wrapped: true
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: AdditionalInfo
  EventNotificationsPagedSearchResultModel:
    description: Event Notifications Paged Search Results.
    type: object
    properties:
      EventNotifications:
        description: Gets or sets the Event Notifications.
        type: array
        items:
          $ref: '#/definitions/EventNotificationModel'
        xml:
          name: EventNotifications
          wrapped: true
      AdditionalInfo:
        $ref: '#/definitions/HypermediaModel '
        description: Gets or sets Hypermedia content for the result.
        xml:
          name: Hypermedia
      TotalResults:
        format: int32
        description: Gets or sets total result.
        type: integer
        xml:
          name: TotalResults
    xml:
      name: EventNotificationsSearchResult
      namespace: 'http://www.air-watch.com/servicemodel/resources'
  EventNotificatonsSubscriptionsResultModel:
    description: Event Notificatons and Subscriptions results.
    type: object
    properties:
      EventNotifications:
        description: Gets or sets the Event Notifications.
        type: array
        items:
          $ref: '#/definitions/EventNotificationModel'
        xml:
          name: EventNotifications
          wrapped: true
      EventSubscriptions:
        description: Gets or sets the Event Subscriptions.
        type: array
        items:
          $ref: '#/definitions/EventSubscriptionModel'
        xml:
          name: EventSubscriptions
          wrapped: true
      TotalEventNotificationRecords:
        format: int32
        description: Gets or sets the Total Event Notifications Records.
        type: integer
        xml:
          name: TotalEventNotificationRecords
      TotalEventSubscriptionRecords:
        format: int32
        description: Gets or sets the Total Event Subscriptions Records.
        type: integer
        xml:
          name: TotalEventSubscriptionRecords
  EventSubscriptionModel:
    description: The Event Subscription Model.
    type: object
    properties:
      name:
        description: Gets or sets name for the subscription.
        type: string
        xml:
          name: Name
      channelUrl:
        description: Gets or sets uRL for the webhook.
        type: string
        xml:
          name: ChannelUrl
      channelAuthType:
        format: int32
        description: Gets or sets the type of authentication used.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: ChannelAuthType
      Username:
        description: Gets or sets the username required to access the URL.
        type: string
        xml:
          name: Username
      Password:
        description: Gets or sets the Password required to access the URL.
        type: string
        xml:
          name: Password
      DeviceEvents:
        $ref: '#/definitions/DeviceEventsModel'
        description: Gets or sets device events that could occur for a device.
        xml:
          name: DeviceEvents
      organizationGroupId:
        format: int32
        description: Gets or sets organization group ID.
        type: integer
        xml:
          name: OrganizationGroupId
      organizationGroupUuid:
        format: uuid
        description: Gets or sets organization group UUID.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
  GroupAcknowledgementV2Model:
    description: Merge changes .
    type: object
    properties:
      total_results:
        format: int32
        description: The total number of results returned by the list or query operation.
        type: integer
        xml:
          name: TotalResults
      items_per_page:
        format: int32
        description: The number of groups returned.
        type: integer
        xml:
          name: ItemsPerPage
      add_count_in_current_page:
        format: int32
        description: Total members pending to be added to group.
        type: integer
        xml:
          name: AddCount
      remove_count_in_current_page:
        format: int32
        description: Total members pending to be removed from the group.
        type: integer
        xml:
          name: RemovalCount
      add_list:
        description: User details for which changes are pending.
        type: array
        items:
          $ref: '#/definitions/MembershipDetailModel'
        xml:
          name: AddList
      remove_list:
        description: User details for which changes are pending.
        type: array
        items:
          $ref: '#/definitions/MembershipDetailModel'
        xml:
          name: RemoveList
      merge_status:
        description: Status as retrieved for group.
        type: string
        xml:
          name: MergeStatus
      last_sync_on_time:
        format: date-time
        description: Last sync On Time
        type: string
        xml:
          name: LastSyncOn
      access_token:
        format: uuid
        description: Access token for the merge action.
        type: string
        xml:
          name: AccessToken
        example: 00000000-0000-0000-0000-000000000000
      _links:
        description: Gets a list of JSON HAL links.
        type: object
        additionalProperties:
          $ref: '#/definitions/JsonHalLinkModel'
        readOnly: true
        xml:
          name: Links
    example:
      total_results: 1
      items_per_page: 2
      add_count_in_current_page: 1
      remove_count_in_current_page: 0
      add_list:
        - user_name: username
          first_name: firstname
          last_name: lastname
          organization_group_name: organizationgroupname
      remove_list:
        - {}
      merge_status: MergePendingApproval
      last_sync_on_time: '2023-08-24T07:10:46.518268+01:00'
      access_token: db5068a5-1f5c-4d2b-871c-1b7924f6d849
      _links: {}
  MembershipDetailModel:
    description: User details for which changes are pending.
    type: object
    properties:
      user_name:
        description: username
        type: string
      first_name:
        description: firstname
        type: string
      last_name:
        description: lastname
        type: string
      organization_group_name:
        description: Organization group name
        type: string
  MergePendingGroupsV2Model:
    description: Request model for merging the user or admin group.
    required:
      - group_uuid
      - access_token
    type: object
    properties:
      group_uuid:
        format: uuid
        description: Uuid of the group to be merged.
        type: string
        example: 00000000-0000-0000-0000-000000000000
      access_token:
        format: uuid
        description: Token to merge the user or admin group.
        type: string
        example: 00000000-0000-0000-0000-000000000000
    example:
      group_uuid: 3a5f1f2c-3776-4a69-b69c-8cd196b6d066
      access_token: bd0207d9-c0e9-4cc3-a659-0840183d72b0
  LocationModel:
    description: This entity represents a location.
    type: object
    properties:
      InternalName:
        description: Gets or sets The location Internal name.
        type: string
        xml:
          name: InternalName
      DisplayName:
        description: Gets or sets The location display name.
        type: string
        xml:
          name: DisplayName
      LocationType:
        format: int32
        description: >-
          Gets or sets Location Type id like 17[Field], 16[Corporate office]
          etc..
        type: integer
        xml:
          name: LocationType
      IsActive:
        format: int32
        description: Gets or sets Value is true if location is active else false.
        type: integer
        xml:
          name: IsActive
      Status:
        format: int32
        description: 'Gets or sets Status id of location like 100[Complete], 80[Installed].'
        type: integer
        xml:
          name: Status
      Timezone:
        format: int32
        description: 'Gets or sets Timezone id of Location like 62[EST, GMT-5.00] etc..'
        type: integer
        xml:
          name: Timezone
      PrimaryLocationGroupId:
        format: int32
        description: Gets or sets Primary location group of location.
        type: integer
        xml:
          name: PrimaryLocationGroupId
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: LocationModel
      namespace: 'http://www.air-watch.com/webapi/resources'
  'LocationModel ':
    description: This entity represents a location.
    type: object
    properties:
      InternalName:
        description: Gets or sets The location Internal name.
        type: string
        xml:
          name: InternalName
      DisplayName:
        description: Gets or sets The location display name.
        type: string
        xml:
          name: DisplayName
      LocationType:
        format: int32
        description: >-
          Gets or sets Location Type id like 17[Field], 16[Corporate office]
          etc..
        type: integer
        xml:
          name: LocationType
      IsActive:
        format: int32
        description: Gets or sets Value is true if location is active else false.
        type: integer
        xml:
          name: IsActive
      Status:
        format: int32
        description: 'Gets or sets Status id of location like 100[Complete], 80[Installed].'
        type: integer
        xml:
          name: Status
      Timezone:
        format: int32
        description: 'Gets or sets Timezone id of Location like 62[EST, GMT-5.00] etc..'
        type: integer
        xml:
          name: Timezone
      PrimaryLocationGroupId:
        format: int32
        description: Gets or sets Primary location group of location.
        type: integer
        xml:
          name: PrimaryLocationGroupId
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: location
  OrganizationGroup:
    description: Location Group Model.
    type: object
    properties:
      Name:
        description: Gets or sets location group name.
        type: string
        xml:
          name: Name
      GroupId:
        description: Gets or sets the location group's tenant code.
        type: string
        xml:
          name: GroupId
      LocationGroupType:
        description: >-
          Gets or sets location group type like Business segment, Customer
          etc...
        type: string
        xml:
          name: LocationGroupType
      Country:
        description: 'Gets or sets country name like United States, India etc.'
        type: string
        xml:
          name: Country
      Locale:
        description: Gets or sets Locale information for Location Group like.
        type: string
        xml:
          name: Locale
      AddDefaultLocation:
        description: >-
          Gets or sets this tells whether default location to be created while
          creating Location Group.
        type: string
        xml:
          name: AddDefaultLocation
      CreatedOn:
        description: Gets or sets date and time when Location group was created.
        type: string
        xml:
          name: CreatedOn
      Users:
        description: >-
          Gets or sets this contains total number of Enrollment users in this
          Location Group.
        type: string
        xml:
          name: Users
      Admins:
        description: >-
          Gets or sets this contains total number of Admin users in this
          Location Group.
        type: string
        xml:
          name: Admins
      Devices:
        description: >-
          Gets or sets this contains total nummber of devices in this Location
          group.
        type: string
        xml:
          name: Devices
      EnableRestApiAccess:
        description: >-
          Gets or sets a value indicating whether this is a value indicating
          whether enable rest api access.
        type: boolean
        xml:
          name: EnableRestApiAccess
      location:
        $ref: '#/definitions/LocationModel '
        description: Gets or sets location details of a locationgroup.
        xml:
          name: Location
      Timezone:
        format: int32
        description: 'Gets or sets Timezone id of Location like 62[EST, GMT-5.00] etc..'
        type: integer
        xml:
          name: Timezone
      timezone_code:
        description: Gets or sets Organization group timezone code.
        type: string
        xml:
          name: TimezoneCode
      customer_industry_type:
        format: int32
        description: Gets or sets Organization Group Customer industry type.
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        type: integer
        xml:
          name: CustomerIndustryType
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: OrganizationGroup
      namespace: 'http://www.air-watch.com/webapi/resources'
    example:
      Name: Global
      GroupId: group_name
      LocationGroupType: Container
      Country: United States
      Locale: en-US
      AddDefaultLocation: 'true'
      CreatedOn: '2017-08-08T01:00:00.000'
      Users: Text value
      Admins: Text value
      Devices: Text value
      EnableRestApiAccess: true
      location:
        InternalName: Text value
        DisplayName: Text value
        LocationType: 3
        IsActive: 4
        Status: 5
        Timezone: 6
        PrimaryLocationGroupId: 7
        id: 1234
        uuid: 9749c3a4-8625-4d5e-b663-94f13636f3fb
      Timezone: 4
      timezone_code: TKT
      customer_industry_type: NONE
      id: 1234
      uuid: e55ba215-f680-4c75-b33d-9a6b5d045bfb
  RestApiAccessStatusModel:
    description: The rest api status model.
    type: object
    properties:
      Status:
        format: int32
        description: Gets or sets the rest api status.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: Status
      DefaultAdminApiKey:
        description: Gets or sets the default admin api key.
        type: string
        xml:
          name: DefaultAdminApiKey
      EnrollmentUserApiKey:
        description: Gets or sets the enrollment user api key.
        type: string
        xml:
          name: EnrollmentUserApiKey
    xml:
      name: RestApiStatus
      namespace: 'http://www.air-watch.com/webapi/resources'
  'RestApiAccessStatusModel ':
    description: The rest api status model.
    type: object
    properties:
      Status:
        format: int32
        description: Gets or sets the rest api status.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: Status
      DefaultAdminApiKey:
        description: Gets or sets the default admin api key.
        type: string
        xml:
          name: DefaultAdminApiKey
      EnrollmentUserApiKey:
        description: Gets or sets the enrollment user api key.
        type: string
        xml:
          name: EnrollmentUserApiKey
    xml:
      name: RestApiAccess
  OrganizationGroupResponseModel:
    description: The organization group response model.
    type: object
    properties:
      Id:
        format: int32
        description: Gets or sets the id.
        type: integer
        xml:
          name: Id
      Uuid:
        format: uuid
        description: Gets or sets the location group guid value.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      RestApiAccess:
        $ref: '#/definitions/RestApiAccessStatusModel '
        description: Gets or sets the rest api status.
        xml:
          name: RestApiAccess
    xml:
      name: OrganizationGroup
      namespace: 'http://www.air-watch.com/webapi/resources'
    example:
      Id: 1
      Uuid: e4b393bb-aac7-4e20-bf8e-9ac1385d7c0d
      RestApiAccess:
        Status: 0
        DefaultAdminApiKey: Text value
        EnrollmentUserApiKey: Text value
  'OrganizationGroup ':
    title: OrganizationGroup
    description: Location Group Model.
    type: object
    properties:
      Name:
        description: Gets or sets location group name.
        type: string
        xml:
          name: Name
      GroupId:
        description: Gets or sets the location group's tenant code.
        type: string
        xml:
          name: GroupId
      LocationGroupType:
        description: >-
          Gets or sets location group type like Business segment, Customer
          etc...
        type: string
        xml:
          name: LocationGroupType
      Country:
        description: 'Gets or sets country name like United States, India etc.'
        type: string
        xml:
          name: Country
      Locale:
        description: Gets or sets Locale information for Location Group like.
        type: string
        xml:
          name: Locale
      AddDefaultLocation:
        description: >-
          Gets or sets this tells whether default location to be created while
          creating Location Group.
        type: string
        xml:
          name: AddDefaultLocation
      Devices:
        description: >-
          Gets or sets this contains total nummber of devices in this Location
          group.
        type: string
        xml:
          name: Devices
      EnableRestApiAccess:
        description: >-
          Gets or sets a value indicating whether this is a value indicating
          whether enable rest api access.
        type: boolean
        xml:
          name: EnableRestApiAccess
      Timezone:
        format: int32
        description: 'Gets or sets Timezone id of Location like 62[EST, GMT-5.00] etc..'
        type: integer
        xml:
          name: Timezone
      timezone_code:
        description: Gets or sets Organization group timezone code.
        type: string
        xml:
          name: TimezoneCode
      customer_industry_type:
        format: int32
        description: Gets or sets Organization Group Customer industry type.
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        type: integer
        xml:
          name: CustomerIndustryType
    xml:
      name: OrganizationGroup
      namespace: 'http://www.air-watch.com/webapi/resources'
    example:
      Name: Global
      GroupId: group_name
      LocationGroupType: Container
      Country: United States
      Locale: en-US
      AddDefaultLocation: 'true'
      Devices: Text value
      EnableRestApiAccess: true
      Timezone: 2
      timezone_code: TKT
      customer_industry_type: NONE
  OrganizationGroupModel:
    type: object
    properties:
      Id:
        format: int32
        type: integer
        xml:
          name: Id
      Uuid:
        format: uuid
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      Name:
        type: string
        xml:
          name: Name
      GroupId:
        type: string
        xml:
          name: GroupId
      LocationGroupType:
        type: string
        xml:
          name: LocationGroupType
      Country:
        type: string
        xml:
          name: Country
      Locale:
        type: string
        xml:
          name: Locale
      AddDefaultLocation:
        type: string
        xml:
          name: AddDefaultLocation
      CreatedOn:
        type: string
        xml:
          name: CreatedOn
      LgLevel:
        format: int32
        type: integer
        xml:
          name: LgLevel
      Users:
        type: string
        xml:
          name: Users
      Admins:
        type: string
        xml:
          name: Admins
      Devices:
        type: string
        xml:
          name: Devices
      ConcurrencyId:
        type: string
        xml:
          name: ConcurrencyId
  'OrganizationGroupModel ':
    type: object
    properties:
      Id:
        format: int32
        type: integer
        xml:
          name: Id
      Uuid:
        format: uuid
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      Name:
        type: string
        xml:
          name: Name
      GroupId:
        type: string
        xml:
          name: GroupId
      LocationGroupType:
        type: string
        xml:
          name: LocationGroupType
      Country:
        type: string
        xml:
          name: Country
      Locale:
        type: string
        xml:
          name: Locale
      AddDefaultLocation:
        type: string
        xml:
          name: AddDefaultLocation
      CreatedOn:
        type: string
        xml:
          name: CreatedOn
      LgLevel:
        format: int32
        type: integer
        xml:
          name: LgLevel
      Users:
        type: string
        xml:
          name: Users
      Admins:
        type: string
        xml:
          name: Admins
      Devices:
        type: string
        xml:
          name: Devices
      ConcurrencyId:
        type: string
        xml:
          name: ConcurrencyId
    xml:
      name: LocationGroupModel
  'HypermediaModel  ':
    description: The aw hypermedia model.
    type: object
    properties:
      Links:
        description: Gets list of hypermedia link.
        type: array
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        xml:
          name: Links
          wrapped: true
      id:
        format: int32
        description: Gets or sets identifier.
        type: integer
        xml:
          name: Id
      uuid:
        format: uuid
        description: Gets or sets current objects UUID.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
    xml:
      name: AdditionalInfo
  OrganizationGroupPagedSearchResultModel:
    description: Organization Group Paged Search Results.
    type: object
    properties:
      OrganizationGroups:
        description: Gets or sets the Organization Groups.
        type: array
        items:
          $ref: '#/definitions/OrganizationGroupModel '
          xml:
            name: LocationGroupModel
        xml:
          name: OrganizationGroups
          wrapped: true
      AdditionalInfo:
        $ref: '#/definitions/HypermediaModel  '
        description: Gets or sets Hypermedia content for the result.
        xml:
          name: Hypermedia
      TotalResults:
        format: int32
        description: Gets or sets total result.
        type: integer
        xml:
          name: TotalResults
    xml:
      name: OrganizationGroupPagedSearchResult
      namespace: 'http://www.air-watch.com/webapi/resources'
    example:
      OrganizationGroups:
        - Id: 1
          Uuid: b487e3c5-8b65-4ae8-a1ce-edafdc4d100c
          Name: Text value
          GroupId: Text value
          LocationGroupType: Text value
          Country: Text value
          Locale: Text value
          AddDefaultLocation: Text value
          CreatedOn: Text value
          LgLevel: 8
          Users: Text value
          Admins: Text value
          Devices: Text value
          ConcurrencyId: Text value
      AdditionalInfo:
        Links: []
        id: 1234
        uuid: 0e405d07-c3b9-4414-94c2-fcae6820fc8e
      TotalResults: 1
  GroupListResponse:
    description: Response for a list of groups.
    type: object
    properties:
      schemas:
        description: Schemas used to compose a group list response.
        type: array
        items:
          type: string
        xml:
          name: Schemas
      totalResults:
        format: int32
        description: The total number of results returned by the list or query operation.
        type: integer
        xml:
          name: TotalResults
      Resources:
        description: A multi-valued list of groups.
        type: array
        items:
          $ref: '#/definitions/GroupResponse'
        xml:
          name: Resources
      startIndex:
        format: int32
        description: The 1-based index of the first result in the current list of groups.
        type: integer
        xml:
          name: StartIndex
      itemsPerPage:
        format: int32
        description: The number of groups returned.
        type: integer
        xml:
          name: ItemsPerPage
    example:
      schemas:
        - Text value
      totalResults: 1
      Resources:
        - id: a75bbb48-3813-40f4-a4cd-0a1152fcbdb8
          externalId: Text value
          displayName: Text value
          schemas:
            - Text value
          'urn:scim:schemas:extension:workspace:1.0:Group':
            domain: Enrollment
            groupType: Directory
            externalType: UNKNOWN
            createGroupAtOrganizationGroup: b8de564a-cd2b-4d02-ba5d-ab3ad7deccde
            organizationGroupAssignment: e6334801-8750-462b-898d-5bb486306c48
            managedByOrganizationGroup: 786ddd78-fd8d-4fcf-85fc-d4955822283a
            distinguishedName: 'cn=John Doe, ou=People, dc=sun.com'
            baseDN: 'dc=example,dc=com'
            directoryDomain: SandBox
            customLogic: sn=smith
            autoSync: false
            autoMerge: true
            maximumAllowableChanges: 10
            addGroupMembersAutomatically: false
            sendEmailToUsersWhenAddingMissingUsers: true
            messageTemplateName: Welcome Template
            allowAllAdministratorsToManageThisUserGroup: false
            defaultEnrollmentRoleName: Full Access
          members:
            - display: wsuser
              value: Text value
              $ref: Text value
          meta:
            created: '2023-08-24T07:10:47.0315375+01:00'
            lastModified: '2023-08-24T07:10:47.0315375+01:00'
            location: Text value
            resourceType: User
            version: Text value
      startIndex: 2
      itemsPerPage: 3
  GroupResponse:
    description: Group Response entity
    required:
      - displayName
      - schemas
    type: object
    properties:
      id:
        format: uuid
        description: Unique identifier for a group.
        type: string
        xml:
          name: Id
        example: 00000000-0000-0000-0000-000000000000
      externalId:
        description: "An identifier for the resource as defined by the provisioning client.  \r\nThe \"externalId\" may simplify identification of a resource between the provisioning client \r\nand the service provider by allowing the client to use a filter to locate the resource with \r\nan identifier from the provisioning domain, obviating the need to store a local mapping \r\nbetween the provisioning domain's identifier of the resource and the identifier used by the \r\nservice provider.  Each resource MAY include a non-empty \"externalId\" value."
        type: string
        xml:
          name: ExternalId
      displayName:
        description: Name of the group.
        type: string
        xml:
          name: DisplayName
      schemas:
        description: Schemas used to compose a group entity.
        type: array
        items:
          type: string
        xml:
          name: Schemas
      'urn:scim:schemas:extension:workspace:1.0:Group':
        $ref: '#/definitions/GroupExtensions'
        description: Extension to group schema.
        xml:
          name: GroupExtensions
      members:
        description: A list of users that belong to the group.
        type: array
        items:
          $ref: '#/definitions/UserSummary'
        xml:
          name: Members
      meta:
        $ref: '#/definitions/Metadata'
        description: Metadata of resource.
        xml:
          name: Metadata
    example:
      id: 9bad70c0-0b0c-4c33-8c29-8ca6a10d0187
      externalId: Text value
      displayName: Text value
      schemas:
        - Text value
      'urn:scim:schemas:extension:workspace:1.0:Group':
        domain: Enrollment
        groupType: Directory
        externalType: UNKNOWN
        createGroupAtOrganizationGroup: db132816-6a3e-400b-bc9c-70506de5154d
        organizationGroupAssignment: bdd42a78-d7ac-4e08-a5fb-eaa8b0ada844
        managedByOrganizationGroup: bf258f5a-4a60-4942-83fa-d5312f08695f
        distinguishedName: 'cn=John Doe, ou=People, dc=sun.com'
        baseDN: 'dc=example,dc=com'
        directoryDomain: SandBox
        customLogic: sn=smith
        autoSync: false
        autoMerge: true
        maximumAllowableChanges: 10
        addGroupMembersAutomatically: false
        sendEmailToUsersWhenAddingMissingUsers: true
        messageTemplateName: Welcome Template
        allowAllAdministratorsToManageThisUserGroup: false
        defaultEnrollmentRoleName: Full Access
      members:
        - display: wsuser
          value: Text value
          $ref: Text value
      meta:
        created: '2023-08-24T07:10:47.2073043+01:00'
        lastModified: '2023-08-24T07:10:47.2073043+01:00'
        location: Text value
        resourceType: User
        version: Text value
  GroupExtensions:
    description: Extensions to the group schema.
    type: object
    properties:
      domain:
        format: int32
        description: Name of the domain.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: Domain
      groupType:
        format: int32
        description: Type of group.
        enum:
          - 1
          - 2
        type: integer
        xml:
          name: GroupType
      externalType:
        description: Type of directory group.
        enum:
          - UNKNOWN
          - GROUP
          - ORGANIZATIONAL_UNIT
          - CUSTOM_QUERY
        type: string
        xml:
          name: ExternalType
      createGroupAtOrganizationGroup:
        format: uuid
        description: The organization group uuid where the group needs to be created.
        type: string
        xml:
          name: CreateGroupAtOrganizationGroup
        example: 00000000-0000-0000-0000-000000000000
      organizationGroupAssignment:
        format: uuid
        description: "This assignment takes effect only when 'Automatically Select Based on User Group' is selected as the Group ID \r\nAssignment Mode in All Settings &gt; Devices &gt; Users &gt; General &gt; Enrollment &gt; Grouping"
        type: string
        xml:
          name: OrganizationGroupAssignment
        example: 00000000-0000-0000-0000-000000000000
      managedByOrganizationGroup:
        format: uuid
        description: Managed by organization.
        type: string
        xml:
          name: ManagedByOrganizationGroup
        example: 00000000-0000-0000-0000-000000000000
      distinguishedName:
        description: >-
          Distinguished name of the group as found in directory service. This
          attribute is not required if externalType is CustomQuery.
        type: string
        xml:
          name: DistinguishedName
      baseDN:
        description: The point from which a server will search for groups.
        type: string
        xml:
          name: BaseDN
      directoryDomain:
        description: Directory domain where the group search needs to be done.
        type: string
        xml:
          name: DirectoryDomain
      customLogic:
        description: >-
          Additional query used to search for directory entity. This attribute
          MUST only be passed when directoryGroupType is set to CustomQuery.
        type: string
        xml:
          name: CustomLogic
      autoSync:
        description: >-
          If enabled, the scheduler will automatically sync with LDAP and
          collect all group changes. If not passed, will apply internally
          configured value.
        type: boolean
        xml:
          name: AutoSync
      autoMerge:
        description: >-
          If enabled, the scheduler will automatically merge changes into
          Workspace One UEM. If not passed, will apply internally configured
          value.
        type: boolean
        xml:
          name: AutoMerge
      maximumAllowableChanges:
        format: int32
        description: "The scheduler needs Admin approval if the changes exceed this amount. This attribute MUST be passed only if AutoMerge enabled. \r\nIf not passed, will apply internally configured value. The value should be between 1 and 99999."
        type: integer
        xml:
          name: MaximumAllowableChanges
      addGroupMembersAutomatically:
        description: >-
          If enabled, will add missing users automatically to the group. If not
          passed, will apply internally configured value.
        type: boolean
        xml:
          name: AddGroupMembersAutomatically
      sendEmailToUsersWhenAddingMissingUsers:
        description: "If enabled, will send emails to users while adding missing users automatically to the group. \r\nThis attribute MUST be sent only if addGroupMembersAutomatically is enabled. If not passed, will apply internally configured value."
        type: boolean
        xml:
          name: SendEmailToUsersWhenAddingMissingUsers
      messageTemplateName:
        description: "The name of the message template that would be used to send emails to users while adding missing users automatically to the group. \r\nThis attribute MUST be sent only if sendEmailToUsersWhenAddingMissingUsers is enabled."
        type: string
        xml:
          name: MessageTemplateName
      allowAllAdministratorsToManageThisUserGroup:
        description: >-
          If enabled, will allow all administrators to manage this user group.
          If not passed, will apply internally configured value.
        type: boolean
        xml:
          name: AllowAllAdministratorsToManageThisUserGroup
      defaultEnrollmentRoleName:
        description: >-
          The name of the default role to which the enrollment users of the
          group would have access to.
        type: string
        xml:
          name: DefaultEnrollmentRoleName
  UserSummary:
    description: User Summary details.
    type: object
    properties:
      display:
        description: Name of the user.
        type: string
        xml:
          name: Display
      value:
        description: Unique identifier for User.
        type: string
        xml:
          name: Value
      $ref:
        description: User location URI
        type: string
        xml:
          name: Location
  Metadata:
    description: A complex attribute containing resource metadata.
    type: object
    properties:
      created:
        format: date-time
        description: The "DateTime" that the resource was added to the service provider.
        type: string
        xml:
          name: Created
      lastModified:
        format: date-time
        description: >-
          The most recent DateTime that the details of this resource were
          updated at the service provider.  If this resource has never been
          modified since its initial creation, the value MUST be the same as the
          value of "created".
        type: string
        xml:
          name: LastModified
      location:
        description: The URI of the resource being returned.
        type: string
        xml:
          name: Location
      resourceType:
        format: int32
        description: The name of the resource type of the resource.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: ResourceType
      version:
        description: The version of the resource being returned.
        type: string
        xml:
          name: Version
  CreateGroupRequest:
    description: Describes attributes required to create a group.
    type: object
    properties:
      schemas:
        description: Schemas of the group to be created.
        type: array
        items:
          type: string
        xml:
          name: Schemas
      externalId:
        description: "An identifier for the resource as defined by the provisioning client.  The \"externalId\" may simplify identification of a \r\nresource between the provisioning client and the service provider by allowing the client to use a filter to locate the \r\nresource with an identifier from the provisioning domain, obviating the need to store a local mapping between the provisioning \r\ndomain's identifier of the resource and the identifier used by the service provider.  Each resource MAY include a non-empty \"externalId\" value."
        type: string
        xml:
          name: ExternalId
      displayName:
        description: Name of the group.
        type: string
        xml:
          name: DisplayName
      'urn:scim:schemas:extension:workspace:1.0:Group':
        $ref: '#/definitions/GroupExtensions'
        description: Extension to group schema.
        xml:
          name: GroupExtension
    example:
      schemas:
        - 'urn:ietf:params:scim:schemas:core:2.0:Group'
      externalId: b9603289-5a88-40ee-a50f-829f2056fe9b
      displayName: groupName
      'urn:scim:schemas:extension:workspace:1.0:Group':
        domain: Enrollment
        groupType: Directory
        externalType: UNKNOWN
        createGroupAtOrganizationGroup: 28cd0bd6-dca8-489d-8584-ae893d83956d
        organizationGroupAssignment: c4c2cc5e-ff3d-485b-8160-00adc7120312
        managedByOrganizationGroup: b608487f-24bd-496c-ab6b-a05e74ac085f
        distinguishedName: 'cn=John Doe, ou=People, dc=sun.com'
        baseDN: 'dc=example,dc=com'
        directoryDomain: SandBox
        customLogic: sn=smith
        autoSync: false
        autoMerge: true
        maximumAllowableChanges: 10
        addGroupMembersAutomatically: false
        sendEmailToUsersWhenAddingMissingUsers: true
        messageTemplateName: Welcome Template
        allowAllAdministratorsToManageThisUserGroup: false
        defaultEnrollmentRoleName: Full Access
  GroupPatchRequest:
    description: Group Patch Request
    required:
      - operations
    type: object
    properties:
      operations:
        description: patch operations list
        type: array
        items:
          $ref: '#/definitions/PatchOperation'
      schemas:
        description: Schemas used to compose a group patch request.
        type: array
        items:
          type: string
    example:
      operations:
        - op: 1
          path: LastSyncOn
          value: 12/31/2099
      schemas:
        - 'urn:ietf:params:scim:api:messages:2.0:PatchOp'
  PatchOperation:
    description: Patch operation indicating the operation type and the attribute path
    required:
      - op
    type: object
    properties:
      op:
        format: int32
        description: Operation to be performed on a property specified by 'path'
        enum:
          - 1
          - 2
          - 3
        type: integer
      path:
        description: Path to the property for patch operation
        type: string
      value:
        description: corresponding 'value' of that field specified by 'path'
        type: object
  SearchRequest:
    description: Search request entity
    type: object
    properties:
      schemas:
        description: Schemas used to compose a search request.
        type: array
        items:
          type: string
        xml:
          name: Schemas
      attributes:
        description: >-
          A multi-valued list of strings indicating the names of resource
          attributes to return in the response.
        type: array
        items:
          type: string
        xml:
          name: Attributes
      excludedAttributes:
        description: >-
          A multi-valued list of strings indicating the names of resource
          attributes to be removed from the default set of attributes to return.
        type: array
        items:
          type: string
        xml:
          name: ExcludedAttributes
      filter:
        description: The filter string used to request a subset of resources.
        type: string
        xml:
          name: Filter
      sortBy:
        description: >-
          A string indicating the attribute to be used to order the returned
          responses.
        type: string
        xml:
          name: SortBy
      sortOrder:
        format: int32
        description: >-
          A string indicating the order in which the 'sortBy' parameter is
          applied.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: SortOrder
      startIndex:
        format: int32
        description: A 1-based integer indicating the index of the first query result.
        type: integer
        xml:
          name: StartIndex
      count:
        format: int32
        description: An integer indicating the maximum number of query results per page.
        type: integer
        xml:
          name: Count
    example:
      schemas:
        - 'urn:ietf:params:scim:api:messages:2.0:SearchRequest'
      attributes:
        - externalId
        - displayName
      excludedAttributes:
        - externalId
        - displayName
        - members
      filter: displayName eq "UG2" || displayName co "UG"
      sortBy: displayName
      sortOrder: Ascending
      startIndex: 1
      count: 1
  ServiceProviderConfig:
    description: >-
      Defines all the configuration properties available at the service
      provider.
    required:
      - bulk
      - changePassword
      - etag
      - filter
      - schemas
      - sort
    type: object
    properties:
      bulk:
        $ref: '#/definitions/BulkFeature'
        description: ''
        xml:
          name: Bulk
      changePassword:
        $ref: '#/definitions/ChangePasswordFeature'
        description: ''
        xml:
          name: ChangePassword
      etag:
        $ref: '#/definitions/ETagFeature'
        description: ''
        xml:
          name: Etag
      filter:
        $ref: '#/definitions/FilterFeature'
        description: ''
        xml:
          name: Filter
      patch:
        $ref: '#/definitions/PatchFeature'
        description: ''
        xml:
          name: Patch
      schemas:
        description: ''
        type: array
        items:
          type: string
        readOnly: true
        xml:
          name: Schemas
      sort:
        $ref: '#/definitions/SortFeature'
        description: ''
        xml:
          name: Sort
    example:
      bulk:
        maxOperations: 1
        maxPayloadSize: 2
        supported: true
      changePassword:
        supported: true
      etag:
        supported: true
      filter:
        maxResults: 1
        supported: true
      patch:
        supported: true
      schemas:
        - 'urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig'
      sort:
        supported: true
  BulkFeature:
    description: A complex type that specifies bulk configuration options.
    required:
      - maxOperations
      - maxPayloadSize
      - supported
    type: object
    properties:
      maxOperations:
        format: int32
        description: An integer value specifying the maximum number of operations.
        type: integer
        xml:
          name: MaxOperations
      maxPayloadSize:
        format: int32
        description: An integer value specifying the maximum payload size in bytes.
        type: integer
        xml:
          name: MaxPayloadSize
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  ChangePasswordFeature:
    description: >-
      A complex type that specifies configuration options related to changing a
      password.
    required:
      - supported
    type: object
    properties:
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  ETagFeature:
    description: A complex type that specifies ETag configuration options.
    required:
      - supported
    type: object
    properties:
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  FilterFeature:
    description: A complex type that specifies FILTER options.
    required:
      - maxResults
      - supported
    type: object
    properties:
      maxResults:
        format: int32
        description: >-
          An integer value specifying the maximum number of resources returned
          in a response.
        type: integer
        xml:
          name: MaxResults
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  PatchFeature:
    description: A complex type that specifies PATCH configuration options.
    required:
      - supported
    type: object
    properties:
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  SortFeature:
    description: A complex type that specifies Sort configuration options.
    required:
      - supported
    type: object
    properties:
      supported:
        description: A Boolean value specifying whether or not the operation is supported.
        type: boolean
        xml:
          name: Supported
  UserResponse:
    description: User response entity
    required:
      - userName
      - schemas
    type: object
    properties:
      id:
        format: uuid
        description: Unique identifier for a user
        type: string
        xml:
          name: Id
        example: 00000000-0000-0000-0000-000000000000
      externalId:
        description: "An identifier for the resource as defined by the provisioning client.  \r\nThe \"externalId\" may simplify identification of a resource between the \r\nprovisioning client and the service provider by allowing the client to \r\nuse a filter to locate the resource with an identifier from the provisioning \r\ndomain, obviating the need to store a local mapping between the provisioning \r\ndomain's identifier of the resource and the identifier used by the service provider.\r\nEach resource MAY include a non-empty \"externalId\" value."
        type: string
        xml:
          name: ExternalId
      userName:
        description: "Unique identifier for the user, used by the user to directly authenticate. \r\nOften displayed to the user as their unique identifier within the system \r\n(as opposed to \"id\" or \"externalId\", which are generally opaque and not user-friendly \r\nidentifiers).  Each User MUST include a non-empty userName value.  This identifier MUST \r\nbe unique across entire set of Users.  This attribute is REQUIRED and is case insensitive."
        type: string
        xml:
          name: UserName
      schemas:
        description: Schemas used to compose a user entity
        type: array
        items:
          type: string
        xml:
          name: Schemas
      'urn:scim:schemas:extension:workspace:1.0:User':
        $ref: '#/definitions/UserExtensions'
        description: Extension to user schema.
        xml:
          name: UserExtension
      groups:
        description: "A list of groups to which the user belongs, either through direct membership, through \r\nnested groups, or dynamically calculated."
        type: array
        items:
          $ref: '#/definitions/GroupSummary'
        xml:
          name: Groups
      meta:
        $ref: '#/definitions/Metadata'
        description: Resource metadata
        xml:
          name: Metadata
    example:
      id: bedec4af-6a3e-40c4-81b6-b652ffa71d68
      externalId: Text value
      userName: Text value
      schemas:
        - Text value
      'urn:scim:schemas:extension:workspace:1.0:User':
        domain: Enrollment
        managedByOrganizationGroup: 7d275e30-45c9-4ba9-b32a-9bd080313a1c
      groups:
        - value: Text value
          $ref: Text value
          display: wsUserGroup
      meta:
        created: '2023-08-24T07:10:47.414931+01:00'
        lastModified: '2023-08-24T07:10:47.414931+01:00'
        location: Text value
        resourceType: User
        version: Text value
  UserExtensions:
    description: Extensions to the user schema.
    type: object
    properties:
      domain:
        format: int32
        description: Name of the domain.
        enum:
          - 0
          - 1
        type: integer
        xml:
          name: Domain
      managedByOrganizationGroup:
        format: uuid
        type: string
        xml:
          name: ManagedByOrganizationGroup
        example: 00000000-0000-0000-0000-000000000000
  GroupSummary:
    description: Group summary details
    type: object
    properties:
      value:
        description: Unique identifier for group.
        type: string
        xml:
          name: Value
      $ref:
        description: Group location URI
        type: string
        xml:
          name: Location
      display:
        description: Name of the group.
        type: string
        xml:
          name: Display
  TenantStorageSettingsV2ResponseModel:
    description: Specifies the Tenant storage configuration properties.
    type: object
    properties:
      application_capacity_mb:
        format: int32
        description: The application capacity in tenant storage(MB).
        type: integer
        xml:
          name: ApplicationCapacityMb
      application_overage_allowed_mb:
        format: int32
        description: The application overage allowed in tenant storage(MB).
        type: integer
        xml:
          name: ApplicationOverageAllowedMb
      application_max_file_size_mb:
        format: int32
        description: The application maximum file size in tenant storage(MB).
        type: integer
        xml:
          name: ApplicationMaxFileSizeMb
      application_max_file_size_with_cdn_mb:
        format: int32
        description: The application maximum file size with CDN in tenant storage(MB).
        type: integer
        xml:
          name: ApplicationMaxFileSizeWithCdnMb
      content_capacity_mb:
        format: int32
        description: The content capacity in tenant storage(MB).
        type: integer
        xml:
          name: ContentCapacityMb
      content_overage_allowed_mb:
        format: int32
        description: The content overage allowed in tenant storage(MB).
        type: integer
        xml:
          name: ContentOverageAllowedMb
      content_max_file_size_mb:
        format: int32
        description: The content maximum file size in tenant storage(MB).
        type: integer
        xml:
          name: ContentMaxFileSizeMb
      file_encryption_enabled:
        description: The file encryption enabled boolean in tenant storage.
        type: boolean
        xml:
          name: FileEncryptionEnabled
    example:
      application_capacity_mb: 1
      application_overage_allowed_mb: 2
      application_max_file_size_mb: 3
      application_max_file_size_with_cdn_mb: 4
      content_capacity_mb: 5
      content_overage_allowed_mb: 6
      content_max_file_size_mb: 7
      file_encryption_enabled: true
  ViewChangesModel:
    description: Contains the basic details of all the user groups changes after merge.
    type: object
    properties:
      total_records:
        format: int32
        description: Total number of Records.
        type: integer
        xml:
          name: TotalRecords
      results:
        description: List of users.
        type: array
        items:
          $ref: '#/definitions/UsersModel'
        xml:
          name: Results
    example:
      total_records: 1
      results:
        - user_uuid: e9c4019c-31af-4155-91fb-94092408cc79
          user_name: Text value
          first_name: Text value
          last_name: Text value
          security_type: 0
          organization_group_uuid: 75102336-66d8-47fd-bcfe-f256b83e933f
          organization_group_name: Text value
  UsersModel:
    description: Contains user details.
    type: object
    properties:
      user_uuid:
        format: uuid
        description: User unique identifier.
        type: string
        xml:
          name: UserUuid
        example: 00000000-0000-0000-0000-000000000000
      user_name:
        description: User name.
        type: string
        xml:
          name: UserName
      first_name:
        description: First name.
        type: string
        xml:
          name: FirstName
      last_name:
        description: Last name.
        type: string
        xml:
          name: LastName
      security_type:
        format: int32
        description: ''
        enum:
          - 0
          - 1
          - 2
        type: integer
        xml:
          name: SecurityType
      organization_group_uuid:
        format: uuid
        description: Organization group unique identifier.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      organization_group_name:
        description: Organization group name.
        type: string
        xml:
          name: OrganizationGroupName
  CreateEnrollmentUserV2Model:
    description: Request model to represent the enrollment user create attributes
    required:
      - userName
      - securityType
    type: object
    properties:
      externalId:
        description: Enrollment user external id
        type: string
        xml:
          name: ExternalId
      userName:
        description: Enrollment user username
        type: string
        xml:
          name: UserName
      password:
        description: Enrollment user password
        type: string
        xml:
          name: Password
      firstName:
        description: Enrollment user firstname
        type: string
        xml:
          name: FirstName
      lastName:
        description: Enrollment user lastname
        type: string
        xml:
          name: LastName
      displayName:
        description: Enrollment user displayname
        type: string
        xml:
          name: DisplayName
      userPrincipalName:
        description: Enrollment user userprincipalname
        type: string
        xml:
          name: UserPrincipalName
      emailAddress:
        description: Enrollment user email address
        type: string
        xml:
          name: EmailAddress
      emailUsername:
        description: Enrollment user email username
        type: string
        xml:
          name: EmailUsername
      phoneNumber:
        description: Enrollment user phone number
        type: string
        xml:
          name: PhoneNumber
      mobileNumber:
        description: Enrollment user mobile number
        type: string
        xml:
          name: MobileNumber
      messageType:
        description: >-
          Enrollment user message type, available options are None, Email and
          SMS.
        type: string
        xml:
          name: MessageType
      messageTemplateUuid:
        format: uuid
        description: Enrollment user message template uuid
        type: string
        xml:
          name: MessageTemplateUuid
        example: 00000000-0000-0000-0000-000000000000
      enrollmentRoleUuid:
        format: uuid
        description: Enrollment user role uuid
        type: string
        xml:
          name: EnrollmentRoleUuid
        example: 00000000-0000-0000-0000-000000000000
      status:
        description: 'Enrollment user status, indicating whether enrollment user is active'
        type: boolean
        xml:
          name: Status
      securityType:
        description: >-
          Enrollment user security type, available options are basic, directory
          and authenticationProxy.
        type: string
        xml:
          name: SecurityType
      deviceStagingEnabled:
        description: Enrollment user device staging enabled
        type: boolean
        xml:
          name: DeviceStagingEnabled
      deviceStagingType:
        description: >-
          Enrollment user device staging type, available options are
          StagingDisabled, SingleUserStagingStandard, SingleUserStagingAdvanced,
          MultipleUserStaging, MultipleUserStagingSingleUserStandard and
          MultipleUserStagingSingleUserAdvanced.
        type: string
        xml:
          name: DeviceStagingType
      organizationGroupUuid:
        format: uuid
        description: Enrollment user organization group uuid
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      enrollmentOrganizationGroupUuid:
        format: uuid
        description: Enrollment user enrollment organization group uuid
        type: string
        xml:
          name: EnrollmentOrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      customAttribute1:
        description: The enrollment user customAttribute1
        type: string
        xml:
          name: CustomAttribute1
      customAttribute2:
        description: The enrollment user customAttribute2
        type: string
        xml:
          name: CustomAttribute2
      customAttribute3:
        description: The enrollment user customAttribute3
        type: string
        xml:
          name: CustomAttribute3
      customAttribute4:
        description: The enrollment user customAttribute4
        type: string
        xml:
          name: CustomAttribute4
      customAttribute5:
        description: The enrollment user customAttribute5
        type: string
        xml:
          name: CustomAttribute5
      aadMappingAttribute:
        description: >-
          When using the AirWatch Provisioning Adapter inside of Workspace ONE
          Access or using the UEM APIs to create users from 3rd party identity
          stores to create enrollment users, provide AadMappingAttribute to
          supports Win10 Azure Compliance/OOBE flow.
        type: string
        xml:
          name: AadMappingAttribute
      department:
        description: The department that the enrollment user belongs to.
        type: string
        xml:
          name: Department
      employeeIdentifier:
        description: The employee identifier of enrollment user.
        type: string
        xml:
          name: EmployeeIdentifier
      costCenter:
        description: The cost center associated to the enrollment user.
        type: string
        xml:
          name: CostCenter
      androidSharedDeviceMode:
        description: >-
          A value indicating the mode used to manage android shared devices.
          Applicable only for android platform with multi staging enabled.
          Defaults to Launcher.
        type: string
        xml:
          name: AndroidSharedDeviceMode
      androidSharedDeviceAdminModePasscode:
        description: The Android Shared device admin mode passcode for native check out.
        type: string
        xml:
          name: AndroidSharedDeviceAdminModePasscode
      androidSharedDeviceSystemAppsEnabled:
        description: Android Shared device system apps enabled for native check out.
        type: boolean
        xml:
          name: AndroidSharedDeviceSystemAppsEnabled
    example:
      externalId: e559e7df-4ba0-4891-9fcd-8574c1770d34
      userName: username
      password: password
      firstName: firstname
      lastName: lastname
      displayName: displayname
      userPrincipalName: noreply@vmware.com
      emailAddress: noreply@vmware.com
      emailUsername: noreply@vmware.com
      phoneNumber: 1-111-111-1111
      mobileNumber: +1(111)-111-1111
      messageType: Email
      messageTemplateUuid: 9bab9931-8647-4ecb-bf77-ea4627dd2a60
      enrollmentRoleUuid: ad7a2065-646f-4ec1-ab99-533747110699
      status: true
      securityType: directory
      deviceStagingEnabled: false
      deviceStagingType: StagingDisabled
      organizationGroupUuid: 72dee4a7-44b8-4ce9-8a17-50d693fc0be8
      enrollmentOrganizationGroupUuid: cd237403-9e7a-4734-818a-07d8dbc05385
      customAttribute1: CustomAttribute1
      customAttribute2: CustomAttribute2
      customAttribute3: CustomAttribute3
      customAttribute4: CustomAttribute4
      customAttribute5: CustomAttribute5
      aadMappingAttribute: e559e7df-4ba0-4891-9fcd-8574c1770d34
      department: Sales
      employeeIdentifier: '12345'
      costCenter: '110'
      androidSharedDeviceMode: Native
      androidSharedDeviceAdminModePasscode: p@ssword
      androidSharedDeviceSystemAppsEnabled: false
  ReadEnrollmentUserV2Model:
    description: Response model to represent an enrollment user read attributes.
    type: object
    properties:
      uuid:
        format: uuid
        description: Gets or sets enrollment user uuid.
        type: string
        xml:
          name: Uuid
        example: 00000000-0000-0000-0000-000000000000
      externalId:
        description: Gets or sets enrollment user external id.
        type: string
        xml:
          name: ExternalId
      domain:
        description: Gets or sets enrollment user domain.
        type: string
        xml:
          name: Domain
      userName:
        description: Gets or sets enrollment user username.
        type: string
        xml:
          name: UserName
      firstName:
        description: Gets or sets enrollment user firstname.
        type: string
        xml:
          name: FirstName
      lastName:
        description: Gets or sets enrollment user lastname.
        type: string
        xml:
          name: LastName
      displayName:
        description: Gets or sets enrollment user displayname.
        type: string
        xml:
          name: DisplayName
      fullName:
        description: Gets or sets enrollment user fullname.
        type: string
        xml:
          name: FullName
      userPrincipalName:
        description: Gets or sets enrollment user userprincipalname.
        type: string
        xml:
          name: UserPrincipalName
      emailAddress:
        description: Gets or sets enrollment user email address.
        type: string
        xml:
          name: EmailAddress
      phoneNumber:
        description: Gets or sets enrollment user phone number.
        type: string
        xml:
          name: PhoneNumber
      mobileNumber:
        description: Gets or sets enrollment user mobile number.
        type: string
        xml:
          name: MobileNumber
      emailUserName:
        description: Gets or sets enrollment user email username.
        type: string
        xml:
          name: EmailUserName
      messageType:
        description: >-
          Gets or sets enrollment user message type, available options are None,
          Email and SMS.
        type: string
        xml:
          name: MessageType
      enrollmentRoleUuid:
        format: uuid
        description: Gets or sets enrollment user role uuid.
        type: string
        xml:
          name: EnrollmentRoleUuid
        example: 00000000-0000-0000-0000-000000000000
      status:
        description: >-
          Gets or sets enrollment user status, indicating whether enrollment
          user is active.
        type: boolean
        xml:
          name: Status
      securityType:
        description: >-
          Gets or sets enrollment user security type, available options are
          basic, directory and authenticationProxy.
        type: string
        xml:
          name: SecurityType
      deviceStagingType:
        description: >-
          Gets or sets enrollment user device staging type, available options
          are StagingDisabled, SingleUserStagingStandard,
          SingleUserStagingAdvanced, MultipleUserStaging,
          MultipleUserStagingSingleUserStandard and
          MultipleUserStagingSingleUserAdvanced.
        type: string
        xml:
          name: DeviceStagingType
      enrolledDeviceCount:
        format: int32
        description: Gets or sets enrollment user enrolled device count.
        type: integer
        xml:
          name: EnrolledDeviceCount
      removableDriveCount:
        format: int32
        description: Removable drive count for enrollment user
        type: integer
        xml:
          name: RemovableDriveCount
      userGroupCount:
        format: int32
        description: User group count for enrollment user
        type: integer
        xml:
          name: UserGroupCount
      organizationGroupUuid:
        format: uuid
        description: Gets or sets enrollment user organization group uuid.
        type: string
        xml:
          name: OrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      enrollmentOrganizationGroupUuid:
        format: uuid
        description: Gets or sets enrollment user enrollment organization group uuid.
        type: string
        xml:
          name: EnrollmentOrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      aadMappingAttribute:
        description: Gets or sets Azure active directory mapping attribute.
        type: string
        xml:
          name: AadMappingAttribute
      department:
        description: Gets or sets the department that the enrollment user belongs to.
        type: string
        xml:
          name: Department
      employeeIdentifier:
        description: Gets or sets the employee identifier of enrollment user.
        type: string
        xml:
          name: EmployeeIdentifier
      costCenter:
        description: Gets or sets the cost center associated to the enrollment user.
        type: string
        xml:
          name: CostCenter
      customAttribute1:
        description: Gets or sets enrollment user customattribute1.
        type: string
        xml:
          name: CustomAttribute1
      customAttribute2:
        description: Gets or sets enrollment user customattribute2.
        type: string
        xml:
          name: CustomAttribute2
      customAttribute3:
        description: Gets or sets enrollment user customattribute3.
        type: string
        xml:
          name: CustomAttribute3
      customAttribute4:
        description: Gets or sets enrollment user customattribute4.
        type: string
        xml:
          name: CustomAttribute4
      customAttribute5:
        description: Gets or sets enrollment user customattribute5.
        type: string
        xml:
          name: CustomAttribute5
      androidSharedDeviceMode:
        description: >-
          A value indicating the mode used to manage android shared devices.
          Applicable only for android platform with multi staging enabled.
          Defaults to Launcher.
        type: string
        xml:
          name: AndroidSharedDeviceMode
      androidSharedDeviceSystemAppsEnabled:
        description: Android Shared device system apps enabled for native check out.
        type: boolean
        xml:
          name: AndroidSharedDeviceSystemAppsEnabled
    example:
      uuid: ac26e83b-ccdf-416e-a282-80cafc5f865f
      externalId: e559e7df-4ba0-4891-9fcd-8574c1770d34
      domain: vmware.com
      userName: username
      firstName: firstname
      lastName: lastname
      displayName: displayname
      fullName: fullname
      userPrincipalName: noreply@vmware.com
      emailAddress: noreply@vmware.com
      phoneNumber: 1-111-111-1111
      mobileNumber: +1(111)-111-1111
      emailUserName: noreply@vmware.com
      messageType: Email
      enrollmentRoleUuid: c8f1c4c9-1a96-4ddc-b0dd-27aa578db610
      status: true
      securityType: directory
      deviceStagingType: StagingDisabled
      enrolledDeviceCount: 1
      removableDriveCount: 2
      userGroupCount: 3
      organizationGroupUuid: ba843024-a7ae-43a0-9cc9-f6dccc73a3b1
      enrollmentOrganizationGroupUuid: 09a4d58c-6928-44a0-b4b4-80b32d7a05a6
      aadMappingAttribute: Text value
      department: Text value
      employeeIdentifier: Text value
      costCenter: Text value
      customAttribute1: customattribute1
      customAttribute2: customattribute2
      customAttribute3: customattribute3
      customAttribute4: customattribute4
      customAttribute5: customattribute5
      androidSharedDeviceMode: Native
      androidSharedDeviceSystemAppsEnabled: false
  UpdateEnrollmentUserV2Model:
    description: Request model to represent the enrollment user update attributes.
    type: object
    properties:
      password:
        description: Gets or sets enrollment user password.
        type: string
        xml:
          name: Password
      firstName:
        description: Gets or sets enrollment user first name.
        type: string
        xml:
          name: FirstName
      lastName:
        description: Gets or sets enrollment user last name.
        type: string
        xml:
          name: LastName
      displayName:
        description: Gets or sets enrollment user display name.
        type: string
        xml:
          name: DisplayName
      userPrincipalName:
        description: Gets or sets enrollment user userprincipalname.
        type: string
        xml:
          name: UserPrincipalName
      emailAddress:
        description: Gets or sets enrollment user email address.
        type: string
        xml:
          name: EmailAddress
      emailUsername:
        description: Gets or sets email user account name.
        type: string
        xml:
          name: EmailUsername
      phoneNumber:
        description: Gets or sets enrollment user phone number.
        type: string
        xml:
          name: PhoneNumber
      mobileNumber:
        description: Gets or sets enrollment user mobile number.
        type: string
        xml:
          name: MobileNumber
      messageType:
        description: >-
          Gets or sets enrollment user message type, available options are None,
          Email and SMS.
        type: string
        xml:
          name: MessageType
      messageTemplateUuid:
        format: uuid
        description: Gets or sets enrollment user message template uuid.
        type: string
        xml:
          name: MessageTemplateUuid
        example: 00000000-0000-0000-0000-000000000000
      deviceStagingEnabled:
        description: Gets or sets enrollment user device staging enabled.
        type: boolean
        xml:
          name: DeviceStagingEnabled
      deviceStagingType:
        description: Gets or sets enrollment user device staging type.
        type: string
        xml:
          name: DeviceStagingType
      enrollmentRoleUuid:
        format: uuid
        description: Gets or sets enrollment user role uuid.
        type: string
        xml:
          name: EnrollmentRoleUuid
        example: 00000000-0000-0000-0000-000000000000
      enrollmentOrganizationGroupUuid:
        format: uuid
        description: Gets or sets enrollment user enrollment organization group uuid.
        type: string
        xml:
          name: EnrollmentOrganizationGroupUuid
        example: 00000000-0000-0000-0000-000000000000
      aadMappingAttribute:
        description: Gets or sets Azure active directory mapping attribute.
        type: string
        xml:
          name: AadMappingAttribute
      department:
        description: >-
          The department that the enrollment user belongs to. Allows first 64
          characters, remaining are truncated.
        type: string
        xml:
          name: Department
      employeeIdentifier:
        description: >-
          The employee identifier of enrollment user. Allows first 256
          characters, remaining are truncated.
        type: string
        xml:
          name: EmployeeIdentifier
      costCenter:
        description: >-
          The cost center associated to the enrollment user. Allows first 256
          characters, remaining are truncated.
        type: string
        xml:
          name: CostCenter
      CustomAttribute1:
        description: Gets or sets the enrollment user custom attribute 1.
        type: string
        xml:
          name: CustomAttribute1
      CustomAttribute2:
        description: Gets or sets the enrollment user custom attribute 2.
        type: string
        xml:
          name: CustomAttribute2
      CustomAttribute3:
        description: Gets or sets the enrollment user custom attribute 3.
        type: string
        xml:
          name: CustomAttribute3
      CustomAttribute4:
        description: Gets or sets the enrollment user custom attribute 4.
        type: string
        xml:
          name: CustomAttribute4
      CustomAttribute5:
        description: Gets or sets the enrollment user custom attribute 5.
        type: string
        xml:
          name: CustomAttribute5
      androidSharedDeviceMode:
        description: >-
          A value indicating the mode used to manage android shared devices.
          Applicable only for android platform with multi staging enabled.
          Defaults to Launcher.
        type: string
        xml:
          name: AndroidSharedDeviceMode
      androidSharedDeviceAdminModePasscode:
        description: The Android Shared device admin mode passcode for native check out.
        type: string
        xml:
          name: AndroidSharedDeviceAdminModePasscode
      androidSharedDeviceSystemAppsEnabled:
        description: Android Shared device system apps enabled for native check out.
        type: boolean
        xml:
          name: AndroidSharedDeviceSystemAppsEnabled
    example:
      password: password
      firstName: firstname
      lastName: lastname
      displayName: displayname
      userPrincipalName: testuser@gandalf.dev
      emailAddress: noreply@vmware.com
      emailUsername: noreply@vmware.com
      phoneNumber: 1-111-111-1111
      mobileNumber: +1(111)-111-1111
      messageType: Email
      messageTemplateUuid: 299d61cb-2a78-4bbf-84e9-2e4402f3861a
      deviceStagingEnabled: false
      deviceStagingType: StagingDisabled
      enrollmentRoleUuid: e419ba8e-dc0c-4e51-ab84-52db204999ab
      enrollmentOrganizationGroupUuid: 9a546145-61c4-4c11-8309-61494607a918
      aadMappingAttribute: e559e7df-4ba0-4891-9fcd-8574c1770d34
      department: Sales
      employeeIdentifier: '12345'
      costCenter: '110'
      CustomAttribute1: CustomAttribute1
      CustomAttribute2: CustomAttribute2
      CustomAttribute3: CustomAttribute3
      CustomAttribute4: CustomAttribute4
      CustomAttribute5: CustomAttribute5
      androidSharedDeviceMode: Native
      androidSharedDeviceAdminModePasscode: p@ssword
      androidSharedDeviceSystemAppsEnabled: false
securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    description: API Key
    name: aw-tenant-code
    in: header
  GroupIdAuth:
    type: apiKey
    description: Group ID
    name: aw-groupid
    in: header
  CmsAuth:
    type: apiKey
    description: CMS Authentication
    name: Authorization
    in: header
